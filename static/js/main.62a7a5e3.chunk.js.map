{"version":3,"sources":["components/about/pfp/adam-pfp.jpg","components/about/pfp/alejandro-pfp.jpg","components/about/pfp/nicholas-pfp.jpg","components/about/pfp/mark-pfp.jpg","components/about/pfp/jun-pfp.jpg","components/about/About.tsx","components/splash/splashAssets/countries.jpg","components/splash/splashAssets/covid.jpg","components/splash/splashAssets/cities.jpg","components/localeInfo/localeInfo.tsx","components/search/SearchBar.tsx","components/splash/splash.tsx","components/search/SearchableText.tsx","components/country/country.tsx","config/axios.tsx","components/layout/Loading.tsx","components/country/countries.tsx","components/city/city.tsx","components/city/cities.tsx","components/covid/covid.tsx","components/covid/covidcases.tsx","components/layout/navbar.tsx","components/map/SimpleMap.tsx","components/country/countryInstance.tsx","components/city/cityInstance.tsx","components/covid/covidDate.tsx","components/covidGraph/covidGraph.tsx","components/covid/countryTimeline.tsx","components/search/GlobalSearch.tsx","components/visualizations/groupedBarChart.tsx","components/visualizations/datesLineChart.tsx","components/visualizations/pieChart.tsx","components/visualizations/ourVisualizations.tsx","components/visualizations/funnelChart.tsx","components/visualizations/theirVisualizations.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GitInfo","email","username","tests","numCommits","numIssues","numUnitTests","this","ContributorExhibit","props","contributor","className","style","textAlign","marginTop","name","src","photo","alt","fontSize","responsibilities","map","responsibility","fontWeight","gitInfo","bio","SourceExhibit","description","href","link","getContributors","a","adamStats","adamPFP","alejandroStats","alejandroPFP","nicholasStats","nicholasPFP","junStats","junPFP","markStats","markPFP","totalStats","contributors","fetch","then","res","json","data","key","rawCommitStat","JSON","parse","commits","forEach","rawIssueStat","author","About","useState","contributorStats","setContributorStats","setTotalStats","useEffect","pop","asyncSetContributorStats","LocaleInfo","location","showNews","showTests","searchType","searchQuery","encodeURI","localeInfoHeader","height","width","title","SearchBar","history","useHistory","onSubmit","event","preventDefault","q","target","value","params","queryString","search","uri","redirect","stringify","push","go","htmlFor","type","defaultValue","Splash","onMouseOver","color","onMouseOut","Card","to","onMouseEnter","Img","variant","countries","Body","Title","Text","cities","covid","SearchableText","highlight","backgroundColor","padding","output","text","children","t","split","s","i","length","arr","reg","RegExp","exec","c","lastIndex","b","clean","substring","hlText","Country","country","onClick","id","alignItems","flag","officialName","icon","faChild","population","toLocaleString","faMountain","area","continent","city","clientAxios","axios","create","baseURL","Loading","Countries","msg","setMsg","setData","page","perPage","sort","currentPageNum","Number","currentPerPage","getCountries","test","replaceAll","get","response","catch","error","status","undefined","console","log","handleSortFilter","index","replace","indexOf","tmp1","tmp2","andIndex","onChange","bind","selected","count","previousLabel","nextLabel","breakLabel","pageCount","forcePage","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","City","latitude","longitude","Cities","getCities","scope","Covid","country_id","cases","deaths","recovered","lastCovidCase","slice","CovidCases","getCovidCases","overflow","overflowX","overflowY","Navbar","collapseClass","handleCollapeClass","handleClick","SimpleMap","info","center","zoom","bootstrapURLKeys","defaultCenter","defaultZoom","onclick","CountryInstance","useParams","setCountry","getCountry","commonName","coatOfArms","region","subregion","role","lat","parseFloat","lng","CityInstance","setCity","getCity","CovidDate","date","totalCases","totalDeaths","totalRecovered","CovidGraph","scrolling","CountryTimeline","setCovid","currentCovid","setCurrentCovid","getCovid","covidDate","GlobalSearch","getAll","CountrySearchResults","moreRedirect","CitySearchResults","CovidSearchResults","CountryCard","redirectPrompt","CityCard","CovidCard","display","GroupedBarChart","ResponsiveContainer","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","verticalAlign","wrapperStyle","lineHeight","ReferenceLine","y","stroke","Brush","Bar","fill","DatesLineChart","allData","setAllData","Promise","resolve","all","firstCall","secondCall","thirdCall","fourthCall","fifthCall","tempData","instance","US","India","Brazil","UK","Russia","unshift","getAllData","LineChart","Line","activeDot","r","PiesChart","COLORS","RADIAN","Math","PI","PieChart","Pie","cx","cy","labelLine","label","midAngle","innerRadius","outerRadius","percent","radius","x","cos","sin","textAnchor","dominantBaseline","toFixed","entry","Cell","cursor","ourVisualizations","justifyContent","FunnelIncomeChart","loading","setLoading","unparsedData","highIncome","upperMiddleIncome","lowerMiddleIncome","lowIncome","result","tourismData","incomeLevel","country_income_level","chart","FunnelChart","Funnel","isAnimationActive","LabelList","position","TheirVisualizations","WaterGdpScatterPlot","countryTourismData","country_name","percentTourismGdp","country_tourism_percent_GDP","tourismGdpPercentage","unit","formatter","ExportRadarChart","exportData","agriExport","country_agricultural_exports","numExports","exportRadarChart","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","fillOpacity","App","basename","exact","path","component","require","config","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62a7a5e3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/adam-pfp.14a653ad.jpg\";","export default __webpack_public_path__ + \"static/media/alejandro-pfp.33b103aa.jpg\";","export default __webpack_public_path__ + \"static/media/nicholas-pfp.d1623dbc.jpg\";","export default __webpack_public_path__ + \"static/media/mark-pfp.5cc8c3a2.jpg\";","export default __webpack_public_path__ + \"static/media/jun-pfp.af9c4cdf.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport adamPFP from './pfp/adam-pfp.jpg';\r\nimport alejandroPFP from './pfp/alejandro-pfp.jpg';\r\nimport nicholasPFP from './pfp/nicholas-pfp.jpg';\r\nimport markPFP from './pfp/mark-pfp.jpg';\r\nimport junPFP from './pfp/jun-pfp.jpg';\r\nimport './About.css';\r\n\r\n// A class for holding data related to a contributor's git contributions\r\nclass GitInfo {\r\n  numCommits: number = 0;\r\n  numIssues: number = 0;\r\n  numUnitTests: number = 0;\r\n  email: string; // Used to match commits to contributors\r\n  username: string; // Used to match issues to contributors\r\n\r\n  constructor(email: string, username: string, tests) {\r\n    this.email = email;\r\n    this.username = username;\r\n    this.numUnitTests = tests;\r\n  }\r\n}\r\n\r\n// An interface for holding data about a contributor\r\ninterface ContributorInfo {\r\n  name: string;\r\n  photo: any;\r\n  bio: string;\r\n  responsibilities: Array<string>;\r\n  gitInfo: GitInfo;\r\n}\r\n\r\n// Given a [ContributorInfo], return the html to display it\r\nfunction ContributorExhibit(props: any) {\r\n  var contributor: ContributorInfo = props.contributor;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"about-contributor card\">\r\n        <h4 style={{textAlign: \"center\", marginTop: '15px'}}>{contributor.name}</h4>\r\n        <div className=\"about-contributor-header\">\r\n          <img src={contributor.photo} alt=\"contributor\" className=\"about-contributor-pfp\" />\r\n        </div>\r\n\r\n        <div className=\"about-contributor-child\">\r\n          <h6 style={{textAlign: \"center\", fontSize: '20px'}}>Responsibilities:</h6>\r\n          <div className='contributor-block'>{\r\n            contributor.responsibilities.map(responsibility => (\r\n                <span>{responsibility}<br /></span>\r\n            ))\r\n          }</div>\r\n\r\n          <h6 style={{textAlign: \"center\", fontSize: '20px'}}>Contributions:</h6>\r\n          <div className='contributor-block'>\r\n            <span style={{fontWeight: \"bold\"}}>{contributor.gitInfo.numCommits + ''} </span>\r\n            <span> Commits, </span>\r\n            <span style={{fontWeight: \"bold\"}}>{contributor.gitInfo.numIssues + ''} </span>\r\n            <span> Issues, </span>\r\n            <span style={{fontWeight: \"bold\"}}>{contributor.gitInfo.numUnitTests + ''} </span>\r\n            <span>Unit Tests</span>\r\n          </div>\r\n          \r\n          <p>\r\n            {contributor.bio}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SourceExhibit(props: any) {\r\n  return (\r\n    <div className='about-widget card'>\r\n      <h4 style={{textAlign: \"center\"}}>{props.name}</h4>\r\n      <span style={{textAlign: \"justify\"}}>{props.description}</span>\r\n      <a href={props.link} className=\"stretched-link\"></a>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Return an Array<ContributorInfo> containing information about each contributor.\r\n// The last element of will be a ContributorInfo containg the sum of the stats.\r\n// This function must be called with await so that contributor's GitStats\r\n// can be populated via the GitLab API\r\nasync function getContributors() {\r\n  var adamStats: ContributorInfo = {\r\n    name: 'Adam Samuelson',\r\n    photo: adamPFP,\r\n    bio: 'Adam is in his 4th and final year at UT as a CS major with a \\\r\n          minor in government. Outside of class he mentors freshmen through \\\r\n          a CNS FIG known as TIP. Additionally, he enjoys listening to \\\r\n          music, hanging out with friends, working on his own CS projects, \\\r\n          and hydrating himself with water.',\r\n    responsibilities: [\r\n      'Back-end development'],\r\n    gitInfo: new GitInfo('lilbroadam@gmail.com', 'adamsamuelson', 0),\r\n  };\r\n\r\n  var alejandroStats: ContributorInfo = {\r\n    name: 'Alejandro Balderas',\r\n    photo: alejandroPFP,\r\n    bio: 'Alejandro is a senior majoring in CS. This is his last year \\\r\n          before graduating and starting a full time position at Expedia.\\\r\n          He loves pugs and exercising',\r\n    responsibilities: [\r\n      'Front-end development'],\r\n    gitInfo: new GitInfo('alejandro_balderas@utexas.edu', 'alejandrobk', 0),\r\n  };\r\n\r\n  var nicholasStats: ContributorInfo = {\r\n    name: 'Nicholas Huang',\r\n    photo: nicholasPFP,\r\n    bio: 'Nicholas fell in love with programming since high school and has been coding \\\r\n          ever since. Now, he is very proud to work as a developer for CovidDB, working \\\r\n          long hours to ensure that users get all the COVID-19 information that they need',\r\n    responsibilities: [\r\n      'Front-end development',\r\n      'Front-end unit testing'],\r\n    gitInfo: new GitInfo('nhua5610@gmail.com', 'OddJerbb', 23),\r\n  };\r\n\r\n  var junStats: ContributorInfo = {\r\n    name: 'Jun Naruse',\r\n    photo: junPFP,\r\n    bio: 'Jun is an exchange student from Peru. He is in his last semester \\\r\n          majoring in Mechatronics Engineering. In his free time he likes watching \\\r\n          anime and reading manga.',\r\n    responsibilities: [\r\n      'Back-end development',\r\n      'Back-end unit testing'],\r\n    gitInfo: new GitInfo('jun.naruse@gmail.com', 'jun.naruse', 32),\r\n  };\r\n\r\n  var markStats: ContributorInfo = {\r\n    name: 'Mark Grubbs',\r\n    photo: markPFP,\r\n    bio: 'Mark is in his last semester as a CS major with a certificate \\\r\n          in Japanese. He is really into video games.',\r\n    responsibilities: [\r\n      'Front-end Unit Testing'],\r\n    gitInfo: new GitInfo('siegbalicula@gmail.com', 'mgrubbs', 18),\r\n  };\r\n\r\n  var totalStats: ContributorInfo = {\r\n    name: 'total',\r\n    photo: '',\r\n    bio: '',\r\n    responsibilities: [],\r\n    gitInfo: new GitInfo('total', 'total', 73),\r\n  };\r\n\r\n  var contributors: Array<ContributorInfo> = [\r\n    alejandroStats,\r\n    markStats,\r\n    nicholasStats,\r\n    junStats,\r\n    adamStats,\r\n    totalStats,\r\n  ];\r\n\r\n  // Get number of commits for each contributor\r\n  const gitlabContributorsPath: string = 'https://gitlab.com/api/v4/projects/29917081/repository/contributors';\r\n  await fetch(gitlabContributorsPath)\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      for (var key in data) {\r\n        var rawCommitStat = data[JSON.parse(key)];\r\n        totalStats.gitInfo.numCommits += rawCommitStat.commits;\r\n        contributors.forEach((contributor: ContributorInfo) => {\r\n          if (contributor.gitInfo.email === rawCommitStat.email) {\r\n            contributor.gitInfo.numCommits = rawCommitStat.commits;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n  // Get number of issues opened for each contributor\r\n  const gitlabIssuesPath: string = 'https://gitlab.com/api/v4/projects/29917081/issues?per_page=100';\r\n  await fetch(gitlabIssuesPath)\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      for (var key in data) {\r\n        var rawIssueStat = data[JSON.parse(key)];\r\n        totalStats.gitInfo.numIssues++;\r\n        contributors.forEach((contributor: ContributorInfo) => {\r\n          if (contributor.gitInfo.username === rawIssueStat.author.username) {\r\n            contributor.gitInfo.numIssues++;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  \r\n  \r\n  return contributors;\r\n}\r\n\r\nexport default function About(props) {\r\n  const [contributorStats, setContributorStats] = useState<Array<ContributorInfo>>([]);\r\n  const [totalStats, setTotalStats] = useState<ContributorInfo>();\r\n  \r\n  // Set contributorStats\r\n  useEffect(() => {\r\n    async function asyncSetContributorStats() {\r\n      var contributors: Array<ContributorInfo> = await getContributors();\r\n      setTotalStats(contributors.pop());\r\n      setContributorStats(contributors);\r\n    }\r\n\r\n    asyncSetContributorStats();\r\n  }, []);\r\n\r\n  return (\r\n\r\n    /**\r\n     * Requirements for the about page:\r\n     * \r\n     * Description of site (purpose, intended users)\r\n     * Explanation of the interesting result of integrating disparate data\r\n     * Name, photo, bio, major responsibilities (ex: frontend vs backend team), \r\n     * # of commits, issues, and unit tests contributed of each team member\r\n     * Total # of commits, issues, and unit tests\r\n     * Links to APIs and additional data sources, and how each was scraped\r\n     * Tools used and a description of how they were used\r\n     */\r\n\r\n    <div className='container'>\r\n      <h1 style={{textAlign: \"center\", fontSize: \"50px\"}}>About CovidDB</h1><br />\r\n\r\n      {/* Description of site (purpose, intended users) */}\r\n      <h2 style={{textAlign: \"center\"}}>Purpose</h2>\r\n      <p style={{textAlign: \"center\"}}>\r\n        In the ever-evolving world of COVID-19, CovidDB is here to help you \r\n        keep track of your changing health environment. We help you get the\r\n        information you need by organizing information about COVID-19 cases\r\n        per country and city over time.\r\n      </p><br />\r\n\r\n      {/* Explanation of the interesting result of integrating disparate data */}\r\n      <h2 style={{textAlign: \"center\"}}>Interesting findings</h2>\r\n      <p style={{textAlign: \"center\"}}>\r\n        It's hard to find APIs that supply COVID data per city.\r\n      </p><br />\r\n\r\n      {/* Name, photo, bio, major responsibilities (ex: frontend vs backend team),  */}\r\n      {/* # of commits, issues, and unit tests contributed of each team member */}\r\n      <h2 style={{textAlign: \"center\"}}>Contributors and contributor stats </h2><br />\r\n      <div className=\"contributor-container\">\r\n          {\r\n            contributorStats.map( contributor => (\r\n              <p>\r\n                <ContributorExhibit contributor={contributor}/>\r\n              </p>\r\n            ))\r\n          }\r\n      </div><br />\r\n      \r\n      {/* Total # of commits, issues, and unit tests */}\r\n      <h2 style={{textAlign: \"center\"}}>Overall project stats</h2>\r\n      <div style={{textAlign: \"center\"}}>\r\n        <span style={{fontWeight: \"bold\"}}>{totalStats?.gitInfo.numCommits + ''} </span>\r\n        <span>Total Commits, </span>\r\n        <span style={{fontWeight: \"bold\"}}>{totalStats?.gitInfo.numIssues + ''} </span>\r\n        <span>Total Issues, </span>\r\n        <span style={{fontWeight: \"bold\"}}>{totalStats?.gitInfo.numUnitTests + ''} </span>\r\n        <span>Total Unit Tests, </span>\r\n      </div><br /><br />\r\n\r\n      {/* Links to APIs and additional data sources, and how each was scraped */}\r\n      <h2 style={{textAlign: \"center\"}}>Our sources</h2><br />\r\n      <div className=\"sources-container\">\r\n          {/* <SourceExhibit \r\n            name={'GitLab contributors API'}\r\n            description={'An API endpoint that returns information \\\r\n              about the project in terms of the contributors that have worked \\\r\n              on it and how many commits they have made.'}\r\n            link={'https://gitlab.com/api/v4/projects/29917081/repository/contributors'}\r\n          />\r\n          <SourceExhibit \r\n            name={'GitLab Issues API'}\r\n            description={'An API endpoint that returns information \\\r\n              about the project in terms of the issues that have been \\\r\n              submitted to the repo on GitLab.'}\r\n            link={'https://gitlab.com/api/v4/projects/29917081/issues'}\r\n          /> */}\r\n          <SourceExhibit \r\n            name={'COVID-19 Cases Data'}\r\n            description={'Our data about COVID-19 cases is supplied by this \\\r\n              source. The data was compiled by John Hopkins University.'}\r\n            link={'https://data.humdata.org/dataset/novel-coronavirus-2019-ncov-cases'}\r\n          />\r\n           <SourceExhibit \r\n            name={'General Country Data'}\r\n            description={'The below website was used to determine general \\\r\n              information about a country such as it\\'s population, timezone, \\\r\n              and coordinates.'}\r\n            link={'https://restcountries.com/'}\r\n          />\r\n          <SourceExhibit \r\n            name={'General City Data'}\r\n            description={'The below website was used to determine general \\\r\n              information about a city such as it\\'s population, timezone, \\\r\n              and coordinates.'}\r\n            link={'https://simplemaps.com/data/world-cities'}\r\n          />\r\n          {/* <SourceExhibit \r\n            name={'City and country maps'}\r\n            description={'Interactive maps were provided by Google Maps.'}\r\n            link={'https://www.google.com/maps'}\r\n          /> */}\r\n      </div><br /><br />\r\n\r\n      {/* Tools used and a description of how they were used */}\r\n      <h2 style={{textAlign: \"center\"}}>Tools Used</h2><br />\r\n      <div className=\"tools-container\">\r\n        <SourceExhibit \r\n          name={\"HTML\"}\r\n          description={\"A mark-up language that tells your browser how to display our website.\"}\r\n          link={\"https://www.w3schools.com/html/\"}\r\n        />\r\n        <SourceExhibit \r\n          name={\"Bootstrap\"}\r\n          description={\"A framework for CSS that makes it easier to write CSS for our website so our website is appealing to the human eye.\"}\r\n          link={\"https://getbootstrap.com/\"}\r\n        />\r\n        <SourceExhibit \r\n          name={\"TypeScript\"}\r\n          description={\"Used to implement any dynamic part of the website (such as dynamic git statistics). Used as an alternative to JavaScript so type mismatching can be caught at compile time rather than runtime.\"}\r\n          link={\"https://www.typescriptlang.org/\"}\r\n        />\r\n        <SourceExhibit \r\n          name={\"React\"}\r\n          description={\"Used to create the frontend in a component-based way with convenient packages to easily implement things like page routing. Mainly serves as an easier way to write HTML and interweave it with TypeScript.\"}\r\n          link={\"https://reactjs.org/\"}\r\n        />\r\n        <SourceExhibit \r\n          name={\"Git\"}\r\n          description={\"Used for version control of source code; helps developers work on the same codebase while working on their own systems by automatically merging their work into a single codebase.\"}\r\n          link={\"https://git-scm.com/\"}\r\n        />\r\n        <SourceExhibit \r\n          name={\"GitLab\"}\r\n          description={\"A remote repository that serves as a third party hosting our codebase in a centralized spot.\"}\r\n          link={\"https://about.gitlab.com/company/\"}\r\n        />\r\n        <SourceExhibit \r\n          name={\"Amazon Web Services\"}\r\n          description={\"A cloud-based platform that is used to host our website.\"}\r\n          link={\"https://aws.amazon.com/\"}\r\n        />\r\n        <SourceExhibit \r\n          name={\"Postman\"}\r\n          description={\"A tool to conveniently and concisely document the API for our website.\"}\r\n          link={\"https://www.postman.com/\"}\r\n        />\r\n        <SourceExhibit \r\n          name={\"Jest\"}\r\n          description={\"Jest is a unit testing framework for Javascript. The main feature used from the framework was the snapshot testing tools for our objects.\"}\r\n          link={\"https://jestjs.io/ \"}\r\n        />\r\n        <SourceExhibit \r\n          name={\"Selenium\"}\r\n          description={\"Selenium is an open-source automated testing framework used to validate web applications across different browsers and platforms. It was used to test our website’s GUI.\"}\r\n          link={\"https://www.selenium.dev/\"}\r\n        />\r\n        <SourceExhibit \r\n          name={\"Python’s unittest library\"}\r\n          description={\"Python’s built in unit testing framework helped us test the backend functions for our website.\"}\r\n          link={\"https://docs.python.org/3/library/unittest.html\"}\r\n        />\r\n        <SourceExhibit \r\n          name={\"COVID-19 Dashboard\"}\r\n          description={\"Interactive graph embedded in our covid timeline instances. The graph displays the specific countries trends in “confirmed”, “deaths”, and “recovered”..\"}\r\n          link={\"https://trekhleb.dev/covid-19/\"}\r\n        />\r\n      </div><br /><br />\r\n        \r\n      <h2 style={{textAlign: \"center\"}}>Learn More</h2><br />\r\n      <div className=\"covidDB-container\">\r\n        <SourceExhibit \r\n          name={\"Our GitLab Repository\"}\r\n          description={\"CovidDB is open-sourced! You can find our online repository by clicking here!\"}\r\n          link={\"https://gitlab.com/mgrubbs/coviddb\"}\r\n        />\r\n        <SourceExhibit\r\n          name={\"Our API Documenation:\"}\r\n          description={\"Curious about how we handle our data? Check out our documentation for CovidDB's API!\"}\r\n          link={\"https://documenter.getpostman.com/view/17756516/UUy4cRDr\"}\r\n        />\r\n      </div><br />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/countries.d16d2206.jpg\";","export default __webpack_public_path__ + \"static/media/covid.74fd6d2d.jpg\";","export default __webpack_public_path__ + \"static/media/cities.081b9be1.jpg\";","import React from 'react';\r\n\r\n// Either Bing search covid updates for a location\r\n// or Bing search testing sites for a location\r\nconst LocaleInfo = ({ location, showNews, showTests }) => {\r\n\r\n    const searchLocation = encodeURI(location)\r\n    const searchType = \r\n        showNews ? 'news'\r\n                 : showTests ? 'testing' : '';\r\n    const searchQuery \r\n        = 'https://www.bing.com/search?q='\r\n        + searchLocation + ' '\r\n        + 'covid ' + searchType\r\n        + '&count=5';\r\n\r\n    const localeInfoHeader = location === 'near by' && showTests ?\r\n        'Find a COVID test near you:'\r\n        : location === 'near by' && showNews ?\r\n            'Discover COVID news near you:'\r\n            : `COVID ${searchType} in ${location}:`;\r\n\r\n    return(\r\n        <div style={{'height': '600px', 'width': '100%'}} >\r\n            <h3>{localeInfoHeader}</h3>\r\n            <iframe\r\n                src={searchQuery}\r\n                height=\"90%\"\r\n                width=\"100%\"\r\n                title=\"Local COVID information\"\r\n                style={{'border': '1px solid black'}}\r\n                >\r\n            </iframe>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LocaleInfo;\r\n","import { useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport './SearchBar.css';\r\n\r\nexport default function SearchBar(props: any) {\r\n  const history = useHistory();\r\n\r\n  const onSearchSubmit = (event) => {\r\n    event.preventDefault();\r\n    var q: string = event.target.q.value;\r\n    if (q == \"\") {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    var params: any = queryString.parse(props.location.search);\r\n    params.q = q;\r\n    var uri = props.redirect != null ? props.redirect + '' : '';\r\n    uri += '?' + queryString.stringify(params);\r\n    history.push(uri);\r\n    history.go(uri);\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <form onSubmit={onSearchSubmit}>\r\n        <label htmlFor=\"q\" className=\"query-prompt\">\r\n          {`Search ${props.type}:`}\r\n        </label>\r\n        <input\r\n          className=\"query-input\"\r\n          defaultValue={props.defaultValue ? props.defaultValue : \"\"}\r\n          name=\"q\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport countries from './splashAssets/countries.jpg'\r\nimport covid from './splashAssets/covid.jpg'\r\nimport cities from './splashAssets/cities.jpg'\r\nimport Card from 'react-bootstrap/Card';\r\nimport LocaleInfo from '../localeInfo/localeInfo';\r\nimport SearchBar from '../search/SearchBar';\r\nimport './splash.css';\r\n\r\nconst Splash = (props: any) => {\r\n\r\n    const onMouseOver = event => {\r\n        const el = event.target;\r\n        el.style.color = '#0000EE';\r\n      };\r\n      \r\n      const onMouseOut = event => {\r\n        const el = event.target;\r\n        let black = \"#000000\";\r\n        el.style.color = black;\r\n      };\r\n\r\n    return ( \r\n        <div className= \"container\">\r\n            <h1>Welcome to CovidDB</h1>\r\n            <h5> An extensive database tracking Covid-19 information on a day-to-day basis in the scope of countries and cities.</h5>\r\n            <p></p>\r\n            <SearchBar\r\n                location={props.location}\r\n                redirect={\"/search\"}\r\n                type={\"for the information you are after today\"}\r\n            />\r\n            <p>Select the information you are after today.</p>\r\n            <div className=\"container\">\r\n                <div className='row'>\r\n                    <div className='col-12 col-md-4 mb-2'> \r\n                        <Card className='w-100 h-100'>\r\n                        <Link className=\"card-block stretched-link card-link\" to=\"/country\" onMouseEnter={event => onMouseOver(event)} onMouseOut={event => onMouseOut(event)}>\r\n                            <Card.Img className=\"splash-card-image\" variant=\"top\" src={countries} />\r\n                            <Card.Body>\r\n                                <Card.Title>Countries</Card.Title>\r\n                                <Card.Text>\r\n                                    Find the most relevant information on all Countries.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Link>\r\n                        </Card>\r\n                    </div>\r\n                    <div className='col-12 col-md-4 mb-2'> \r\n                        <Card className='mb-2 w-100 h-100'>\r\n                            <Link className=\"card-block stretched-link card-link\" to=\"/city\" onMouseEnter={event => onMouseOver(event)} onMouseOut={event => onMouseOut(event)}>\r\n                            <Card.Img className=\"splash-card-image\" variant=\"top\" src={cities} />\r\n                            <Card.Body>\r\n                                <Card.Title>Cities</Card.Title>\r\n                                <Card.Text>\r\n                                    Find the most relevant information on any City around the world.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            </Link>\r\n                        </Card>\r\n                    </div>\r\n                    <div className='col-12 col-md-4 mb-2'> \r\n                        <Card className='mb-2 w-100 h-100'>\r\n                            <Link className=\"card-block stretched-link card-link\" to=\"/covid\" onMouseEnter={event => onMouseOver(event)} onMouseOut={event => onMouseOut(event)}>\r\n                            <Card.Img className=\"splash-card-image\" variant=\"top\" src={covid} />\r\n                            <Card.Body>\r\n                                <Card.Title>Covid</Card.Title>\r\n                                <Card.Text>\r\n                                    Look at a timeline of Covid cases and other statistics.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            </Link>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div className='row'>\r\n                    <div className='col-12 col-md-6'>\r\n                        <LocaleInfo\r\n                        location={'near by'}\r\n                        showNews={true}\r\n                        showTests={false}/>\r\n                    </div>\r\n                    <div className='col-12 col-md-6'>\r\n                        <LocaleInfo\r\n                        location={'near by'}\r\n                        showNews={false}\r\n                        showTests={true}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Splash;","\r\nexport default function SearchableText(props: any) {\r\n  var highlight = {\r\n    backgroundColor: '#FFFF00',\r\n    padding: '0px',\r\n  };\r\n  var output: any = [];\r\n  const text = props.children + '';\r\n\r\n  if (props.q == null) {\r\n    return <>{text}</>;\r\n  }\r\n\r\n  var t = props.q.split(\" \");\r\n  var s = ''\r\n  for (var i = 0; i < t.length; i++) {\r\n    if (i != t.length - 1) {\r\n      s += t[i] + '|';\r\n    } else {\r\n      s += t[i];\r\n    }\r\n  }\r\n\r\n  const reg = RegExp(s, 'gi');\r\n  let arr;\r\n  var a = 0;\r\n  while ((arr = reg.exec(text)) !== null) {\r\n    var c = reg.lastIndex;\r\n    var b = c - arr[0].length;\r\n\r\n    var clean = text.substring(a, b);\r\n    var hlText = text.substring(b, c);\r\n\r\n    output.push(<>{clean}</>);\r\n    output.push(<mark style={highlight}>{hlText}</mark>)\r\n\r\n    a = c;\r\n  }\r\n  output.push(<>{text.substring(a, text.length)}</>);\r\n\r\n  return output;\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChild, faMountain } from '@fortawesome/free-solid-svg-icons';\r\nimport SearchableText from '../search/SearchableText';\r\n\r\nconst Country = ({ country, q }) => {\r\n\r\n    const history = useHistory();\r\n    const handleCardClick = () => {\r\n        history.push(\"/country/\"+ country.id);\r\n    }\r\n\r\n    // TODO : fix the css, is super ugly\r\n    return(\r\n        <div className='card modelrow' onClick={handleCardClick} style={{alignItems: \"center\", width: \"250px\", height: \"auto\", padding: \"10px\"}}>\r\n            <img className='card-img-top img-card-grid' style={{width: \"125px\", height: \"75px\"}} src={country.flag} alt='Country flag'/>\r\n            <h5 className='card-title text-center mt-6' style={{fontSize: \"17px\"}}>\r\n                <SearchableText q={q}>\r\n                    {country.officialName}\r\n                </SearchableText>\r\n            </h5>\r\n            <div className='card-body'>\r\n                <div className='row' style={{width: \"270px\"}}>\r\n                    <div className='col-6 d-flex justify-content-around'>\r\n                        <FontAwesomeIcon icon={faChild}/>\r\n                        <span className='font-weight-bold' style={{fontSize: \"14px\"}}>\r\n                            <SearchableText q={q}>\r\n                                {country.population.toLocaleString(\"en-US\")}\r\n                            </SearchableText>\r\n                        </span>\r\n                    </div>\r\n                    <div className='col-6 d-flex justify-content-around'>\r\n                        <FontAwesomeIcon icon={faMountain}/>\r\n                        <span className='font-weight-bold' style={{fontSize: \"14px\"}}>\r\n                            <SearchableText q={q}>\r\n                                {country.area.toLocaleString(\"en-US\")} km²\r\n                            </SearchableText>\r\n                        </span>\r\n                    </div>\r\n                </div><br />\r\n                <div className='row' style={{width: \"250px\"}}>\r\n                    <div className='col-12 d-flex justify-content-around'>\r\n                        <p style={{fontSize: \"14px\"}}>Continent: </p>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            <SearchableText q={q}>\r\n                                {country.continent}\r\n                            </SearchableText>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='row' style={{width: \"250px\"}}>\r\n                    <div className='col-12 d-flex justify-content-around'>\r\n                        <p style={{fontSize: \"14px\"}}>Capital: </p>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            <SearchableText q={q}>\r\n                                {country.city ? country.city.name : 'None'}\r\n                            </SearchableText>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Country;","import axios from 'axios';\r\n\r\nconst clientAxios = axios.create({\r\n    baseURL: process.env.NODE_ENV === 'production'\r\n        ? 'https://crown19db.herokuapp.com' // return prod api if running in prod\r\n        : 'http://localhost:5000' // return local api if running locally\r\n});\r\n\r\nexport default clientAxios;\r\n","\r\n import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border\" />\r\n            <div>Loading</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport Country from './country';\r\nimport ReactPaginate from 'react-paginate';\r\nimport clientAxios from '../../config/axios';\r\nimport Loading from '../layout/Loading';\r\nimport './countries.css'\r\nimport SearchBar from '../search/SearchBar';\r\n\r\nconst Countries = (props: any) => {\r\n\r\n    interface Country {\r\n        id: number;\r\n        area: number;\r\n        officialName: string;\r\n        population: number;\r\n        continent: string;\r\n        flag: string;\r\n        capital: City;\r\n    }\r\n\r\n    interface CountryResponse {\r\n        count: number;\r\n        data: Country[];\r\n    }\r\n\r\n    interface City {\r\n        name: string;\r\n    }\r\n\r\n    const [msg, setMsg] = useState('');\r\n    const [data, setData] = useState<CountryResponse>();\r\n\r\n    const history = useHistory();\r\n\r\n    const { q, page, perPage, sort, continent, population } = queryString.parse(props.location.search);\r\n\r\n    var currentPageNum = Number(page ? page : 1);\r\n    var currentPerPage = Number(perPage ? perPage : 12);\r\n\r\n    const getCountries = async () => {\r\n        try {\r\n            var params: any = queryString.parse(props.location.search);\r\n            if (q != null) {\r\n                if (/\\d/.test(q + '')) { // if number has a comma, don't send comma to the API\r\n                    params.q = (q + '').replaceAll(',', '');\r\n                } else {\r\n                    params.q = q;\r\n                }\r\n            }\r\n            if (sort != null) params.sort = sort;\r\n            if (continent != null) params.continent = continent;\r\n            if (population != null) params.population = population;\r\n            params.page = currentPageNum;\r\n            params.perPage = currentPerPage;\r\n            var uri = '/v1/models/country?' + queryString.stringify(params);\r\n            const response = await clientAxios.get<CountryResponse>(uri)\r\n                .then(response => {\r\n                    setData(response.data);\r\n                })\r\n                .catch(\r\n                    error => {\r\n                        if (error.response.status == 400) {\r\n                            setMsg(error.response.data);\r\n                            setData(undefined);\r\n                        } else {\r\n                            setMsg('404 Not Found');\r\n                            console.log(error.response.data);\r\n                            setData(undefined);\r\n                        }\r\n                    }\r\n                );\r\n        } catch (error) {\r\n            setMsg('There was an error');\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setData(undefined);\r\n        getCountries();\r\n    }, [props]);\r\n\r\n    const handlePageClick = (data) => {\r\n        var params: any = queryString.parse(props.location.search);\r\n        params.page = data.selected + 1;\r\n        params.perPage = currentPerPage;\r\n        var uri = '?' + queryString.stringify(params);\r\n        history.push(uri);\r\n        history.go(uri);\r\n    }\r\n\r\n    const handleSortFilter = (data) => {\r\n        const name = data.target.id;\r\n        const value = data.target.value;\r\n\r\n        var params: any = queryString.parse(props.location.search);\r\n        var uri = '?' + queryString.stringify(params);\r\n        uri = uri.replace(/page=\\d\\d*/, 'page=1');\r\n\r\n        // Remove current parameter\r\n        const index = uri.indexOf(name);\r\n        const tmp1 = uri.substring(0, index);\r\n        const tmp2 = uri.substring(index);\r\n        if (index >= 0) {\r\n            var andIndex = tmp2.indexOf('&');\r\n            if (andIndex != -1) {\r\n                andIndex += tmp1.length;\r\n                uri = uri.substring(0, index) + uri.substring(andIndex);\r\n            } else {\r\n                uri = uri.substring(0, index);\r\n            }\r\n        }\r\n        \r\n        if (value != '') {\r\n            uri += uri.length == 1 ? name + '=' + value : '&' + name + '=' + value;\r\n        }\r\n        history.push(uri);\r\n        history.go(uri);\r\n    }\r\n\r\n    return ( \r\n        <div className='container'>\r\n            {msg ? (<h3> {msg} </h3>) : (\r\n                data ?\r\n                <>\r\n                    <div className=\"row\">\r\n                        <h2>Countries</h2>\r\n                        <SearchBar\r\n                            defaultValue={q}\r\n                            location={props.location}\r\n                            type={\"countries\"}\r\n                        />\r\n                        <div className=\"option_container\">\r\n                            <div className='select_con card border-0 text-center'>\r\n                                <label>Filter by Continent</label>\r\n                                <select id='continent' onChange={handleSortFilter.bind(this)} defaultValue={continent + ''}>\r\n                                    <option value='' selected>---</option>\r\n                                    <option value='Africa'>Africa</option>\r\n                                    <option value='Antarctica'>Antarctica</option>\r\n                                    <option value='Asia'>Asia</option>\r\n                                    <option value='Europe'>Europe</option>\r\n                                    <option value='North America'>North America</option>\r\n                                    <option value='Oceania'>Oceania</option>\r\n                                    <option value='South America'>South America</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='select_con card border-0 text-center'>\r\n                                <label>Filter by Population</label>\r\n                                <select id='population' onChange={handleSortFilter.bind(this)} defaultValue={population + ''}>\r\n                                    <option value='' selected>---</option>\r\n                                    <option value='0-500000'>&#60; 500K</option>\r\n                                    <option value='500000-1000000'>500K - 1M</option>\r\n                                    <option value='1000000-5000000'>1M - 5M</option>\r\n                                    <option value='5000000-10000000'>5M - 10M</option>\r\n                                    <option value='10000000-25000000'>10M - 25M</option>\r\n                                    <option value='25000000-50000000'>25M - 50M</option>\r\n                                    <option value='50000000-100000000'>50M - 100M</option>\r\n                                    <option value='100000000-200000000'>100M - 200M</option>\r\n                                    <option value='200000000-999999999999'>&#62; 200M</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='select_con card border-0 text-center'>\r\n                                <label>Sort by</label>\r\n                                <select id='sort' onChange={handleSortFilter.bind(this)} defaultValue={sort + ''}>\r\n                                    <option value=''>---</option>\r\n                                    <option value='officialName'>Name (A-Z)</option>\r\n                                    <option value='-officialName'>Name (Z-A)</option>\r\n                                    <option value='population'>Population (Asc)</option>\r\n                                    <option value='-population'>Population (Desc)</option>\r\n                                    <option value='area'>Land Mass (Asc)</option>\r\n                                    <option value='-area'>Land Mass (Desc)</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div><br />\r\n                    <div className=\"row-grid\">\r\n                        { data ? data.data.map( country => (    \r\n                            <Country \r\n                                country={country} \r\n                                key={country.id}\r\n                                q={q}\r\n                            />\r\n                        )) : <div className=\"spinner-border\">Loading</div>}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {\"There are \" + data.count + \" countries\"}\r\n                    </div>\r\n                    {/* Pagination css is in index.css */}\r\n                    <div className=\"row d-flex justify-content-center\">\r\n                        <ReactPaginate\r\n                            previousLabel={'<<'}\r\n                            nextLabel={'>>'}\r\n                            breakLabel={'...'}\r\n                            pageCount={data.count/12}\r\n                            forcePage={currentPageNum - 1}\r\n                            marginPagesDisplayed={1}\r\n                            pageRangeDisplayed={4}\r\n                            onPageChange={handlePageClick}\r\n                            containerClassName={'pagination'}\r\n                            activeClassName={'pagination-active'}\r\n                        />\r\n                    </div>\r\n                </> : <Loading />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Countries;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SearchableText from '../search/SearchableText';\r\n\r\nconst City = ({ city, q }) => {\r\n    // If city name are two or more words, use a '-' as a separator\r\n\r\n    const history = useHistory();\r\n    const handleRowClick = () => {\r\n        history.push('/city/' + city.id);\r\n    }\r\n\r\n    return(\r\n        <tr onClick={handleRowClick} className='modelrow'>\r\n         <td>\r\n            <SearchableText q={q}>\r\n                {city.name}\r\n            </SearchableText>\r\n        </td>\r\n        <td>\r\n            <SearchableText q={q}>\r\n                {city.country.officialName}\r\n            </SearchableText>\r\n        </td>\r\n        <td>\r\n            <SearchableText q={q}>\r\n                {city.population != null ? city.population.toLocaleString(\"en-US\") : \"No data\"}\r\n            </SearchableText>\r\n        </td>\r\n        <td>\r\n            <SearchableText q={q}>\r\n                {city.latitude}\r\n            </SearchableText>\r\n        </td>\r\n        <td>\r\n            <SearchableText q={q}>\r\n                {city.longitude}\r\n            </SearchableText>\r\n        </td>\r\n        </tr>\r\n    )\r\n}\r\n \r\nexport default City;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport City from './city';\r\nimport ReactPaginate from 'react-paginate';\r\nimport clientAxios from '../../config/axios';\r\nimport Loading from '../layout/Loading';\r\nimport \"./cities.css\";\r\nimport SearchBar from '../search/SearchBar';\r\n\r\nconst Cities = (props: any) => {\r\n\r\n    interface City {\r\n        country: Country;\r\n        country_id: number;\r\n        id: number;\r\n        name: string;\r\n        population: number;\r\n        latitude: number;\r\n        longitude: number;\r\n    }\r\n\r\n    interface CityResponse {\r\n        count: number;\r\n        data: City[];\r\n    }\r\n\r\n    interface Country {\r\n        commonName: string;\r\n    }\r\n\r\n    const [msg, setMsg] = useState('');\r\n    const [data, setData] = useState<CityResponse>();\r\n\r\n    const history = useHistory();\r\n\r\n    const { q, page, perPage, sort, continent, population } = queryString.parse(props.location.search);\r\n\r\n    var currentPageNum = Number(page ? page : 1);\r\n    var currentPerPage = Number(perPage ? perPage : 12);\r\n\r\n    const getCities = async () => {\r\n        try {\r\n            var params: any = queryString.parse(props.location.search);\r\n            if (q != null) {\r\n                if (/\\d/.test(q + '')) { // if number has a comma, don't send comma to the API\r\n                    params.q = (q + '').replaceAll(',', '');\r\n                } else {\r\n                    params.q = q;\r\n                }\r\n            }\r\n            if (sort != null) params.sort = sort;\r\n            if (continent != null) params.continent = continent;\r\n            if (population != null) params.population = population;\r\n            params.page = currentPageNum;\r\n            params.perPage = currentPerPage;\r\n            var uri = '/v1/models/city?' + queryString.stringify(params);\r\n            const response = await clientAxios.get<CityResponse>(uri)\r\n                .then(response => {\r\n                    setData(response.data);\r\n                })\r\n                .catch(\r\n                    error => {\r\n                        if (error.response.status == 400) {\r\n                            setMsg(error.response.data);\r\n                            setData(undefined);\r\n                        } else {\r\n                            setMsg('404 Not Found');\r\n                            console.log(error.response.data);\r\n                            setData(undefined);\r\n                        }\r\n                    }\r\n                );\r\n        } catch (error) {\r\n            console.log(error);\r\n            setMsg('There was an error with finding cities');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setData(undefined);\r\n        getCities();\r\n    }, [props]);\r\n\r\n    const handlePageClick = (data) => {\r\n        var params: any = queryString.parse(props.location.search);\r\n        params.page = data.selected + 1;\r\n        params.perPage = currentPerPage;\r\n        var uri = '?' + queryString.stringify(params);\r\n        console.log('uri = ' + uri);\r\n        history.push(uri);\r\n        history.go(uri);\r\n    }\r\n\r\n    const handleSortFilter = (data) => {\r\n        const name = data.target.id;\r\n        const value = data.target.value;\r\n\r\n        var params: any = queryString.parse(props.location.search);\r\n        var uri = '?' + queryString.stringify(params);\r\n        uri = uri.replace(/page=\\d\\d*/, 'page=1');\r\n\r\n        // Remove current parameter\r\n        const index = uri.indexOf(name);\r\n        const tmp1 = uri.substring(0, index);\r\n        const tmp2 = uri.substring(index);\r\n        if (index >= 0) {\r\n            var andIndex = tmp2.indexOf('&');\r\n            if (andIndex != -1) {\r\n                andIndex += tmp1.length;\r\n                uri = uri.substring(0, index) + uri.substring(andIndex);\r\n            } else {\r\n                uri = uri.substring(0, index);\r\n            }\r\n        }\r\n        \r\n        if (value != '') {\r\n            uri += uri.length == 1 ? name + '=' + value : '&' + name + '=' + value;\r\n        }\r\n        history.push(uri);\r\n        history.go(uri);\r\n    }\r\n    \r\n    return ( \r\n        <div className='container'>\r\n            {msg ? (<h3> {msg} </h3>) : (\r\n                data ?\r\n                <>\r\n                    <div className=\"row\">\r\n                        <h2>Cities</h2>\r\n                        <SearchBar\r\n                            defaultValue={q}\r\n                            location={props.location}\r\n                            type={\"cities\"}\r\n                        >\r\n                        </SearchBar>\r\n                        <div className=\"option_container\">\r\n                            <div className='select_con card border-0 text-center'>\r\n                                <label>Filter by Continent</label>\r\n                                <select id='continent' onChange={handleSortFilter.bind(this)} defaultValue={continent + ''}>\r\n                                    <option value='' selected>---</option>\r\n                                    <option value='Africa'>Africa</option>\r\n                                    <option value='Antarctica'>Antarctica</option>\r\n                                    <option value='Asia'>Asia</option>\r\n                                    <option value='Europe'>Europe</option>\r\n                                    <option value='North America'>North America</option>\r\n                                    <option value='Oceania'>Oceania</option>\r\n                                    <option value='South America'>South America</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='select_con card border-0 text-center'>\r\n                                <label>Filter by Population</label>\r\n                                <select id='population' onChange={handleSortFilter.bind(this)} defaultValue={population + ''}>\r\n                                    <option value='' selected>---</option>\r\n                                    <option value='0-500000'>&#60; 500K</option>\r\n                                    <option value='500000-1000000'>500K - 1M</option>\r\n                                    <option value='1000000-5000000'>1M - 5M</option>\r\n                                    <option value='5000000-10000000'>5M - 10M</option>\r\n                                    <option value='10000000-25000000'>10M - 25M</option>\r\n                                    <option value='25000000-50000000'>&#62; 25M</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='select_con card border-0 text-center'>\r\n                                <label>Sort by</label>\r\n                                <select id='sort' onChange={handleSortFilter.bind(this)} defaultValue={sort + ''}>\r\n                                    <option value='' selected>---</option>\r\n                                    <option value='name'>City Name (A-Z)</option>\r\n                                    <option value='-name'>City Name (Z-A)</option>\r\n                                    <option value='country'>Country Name (A-Z)</option>\r\n                                    <option value='-country'>Country Name (Z-A)</option>\r\n                                    <option value='population'>Population (Asc)</option>\r\n                                    <option value='-population'>Population (Desc)</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"table_container\"><br />\r\n                            <table className=\"table\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr>\r\n                                    <th scope=\"col\">Name</th>\r\n                                    <th scope=\"col\">Country</th>\r\n                                    <th scope=\"col\">Population</th>\r\n                                    <th scope=\"col\">Latitude</th>\r\n                                    <th scope=\"col\">Longitude</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {data.data.map( city => (\r\n                                        <City \r\n                                            city={city}\r\n                                            key={city.id}\r\n                                            q={q}\r\n                                        />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {\"There are \" + data.count + \" cities\"}\r\n                    </div>\r\n                    {/* Pagination css is in index.css */}\r\n                    <div className=\"row d-flex justify-content-center\">\r\n                        <ReactPaginate\r\n                            previousLabel={'<<'}\r\n                            nextLabel={'>>'}\r\n                            breakLabel={'...'}\r\n                            pageCount={data.count/12}\r\n                            forcePage={currentPageNum - 1}\r\n                            marginPagesDisplayed={1}\r\n                            pageRangeDisplayed={4}\r\n                            onPageChange={handlePageClick}\r\n                            containerClassName={'pagination'}\r\n                            activeClassName={'pagination-active'}\r\n                        />\r\n                    </div>\r\n                </> : <Loading />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Cities;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SearchableText from '../search/SearchableText';\r\n\r\nconst Covid = ({ covid, q }) => {\r\n    const history = useHistory();\r\n\r\n    const handleRowClick = () => {\r\n        history.push(\"/covid/\" + covid.country_id);\r\n    }\r\n    \r\n    return(\r\n        <tr onClick={handleRowClick} className='modelrow'>\r\n        <td>\r\n            <SearchableText q={q}>\r\n                {covid.country.officialName}\r\n            </SearchableText>\r\n        </td>\r\n        <td>\r\n            <SearchableText q={q}>\r\n                {covid.cases.toLocaleString(\"en-US\")}\r\n            </SearchableText>\r\n        </td>\r\n        <td>\r\n            <SearchableText q={q}>\r\n                {covid.deaths.toLocaleString(\"en-US\")}\r\n            </SearchableText>\r\n        </td>\r\n        <td>\r\n            <SearchableText q={q}>\r\n                {covid.recovered.toLocaleString(\"en-US\")}\r\n            </SearchableText>\r\n        </td>\r\n        <td>\r\n            <SearchableText q={q}>\r\n                {covid.lastCovidCase.slice(0,10)}\r\n            </SearchableText>\r\n        </td>\r\n        </tr>\r\n    )\r\n}\r\n \r\nexport default Covid;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport Covid from './covid';\r\nimport ReactPaginate from 'react-paginate';\r\nimport clientAxios from '../../config/axios';\r\nimport Loading from '../layout/Loading';\r\nimport './covidcases.css'\r\nimport SearchBar from '../search/SearchBar';\r\n\r\nconst CovidCases = (props: any) => {\r\n\r\n    interface CovidCases {\r\n        country: Country;\r\n        id: number;\r\n        cases: number;\r\n        deaths: string;\r\n        recovered: number;\r\n        country_id: number;\r\n        lastCovidCase: string;\r\n    }\r\n\r\n    interface CovidCasesResponse {\r\n        count: number;\r\n        data: CovidCases[];\r\n    }\r\n\r\n    interface Country {\r\n        commonName: string;\r\n        officialName: string;\r\n    }\r\n\r\n    const [msg, setMsg] = useState('');\r\n    const [covidCases, setCovidCases] = useState<CovidCases[]>();\r\n    const [currentCovid, setCurrentCovid] = useState<CovidCases[]>();\r\n    const [data, setData] = useState<CovidCasesResponse>();\r\n\r\n    const history = useHistory();\r\n\r\n    const { q, page, perPage, sort, cases, deaths, recovered } = queryString.parse(props.location.search);\r\n\r\n    var currentPageNum = Number(page ? page : 1);\r\n    var currentPerPage = Number(perPage ? perPage : 12);\r\n\r\n    const getCovidCases = async () => {\r\n        try {\r\n            var params: any = queryString.parse(props.location.search);\r\n            if (q != null) {\r\n                if (/\\d/.test(q + '')) { // if number has a comma, don't send comma to the API\r\n                    params.q = (q + '').replaceAll(',', '');\r\n                } else {\r\n                    params.q = q;\r\n                }\r\n            }\r\n            if (sort != null) params.sort = sort;\r\n            if (cases != null) params.cases = cases;\r\n            if (deaths != null) params.deaths = deaths;\r\n            if (recovered != null) params.recovered = recovered;\r\n            params.page = currentPageNum;\r\n            params.perPage = currentPerPage;\r\n            var uri = '/v1/models/covid?' + queryString.stringify(params);\r\n            const response = await clientAxios.get<CovidCasesResponse>(uri)\r\n                .then(response => {\r\n                    setData(response.data);\r\n                });\r\n        } catch (error) {\r\n            setMsg('There was an error');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setData(undefined);\r\n        getCovidCases();\r\n    }, [props]);\r\n\r\n    const handlePageClick = (data) => {\r\n        var params: any = queryString.parse(props.location.search);\r\n        params.page = data.selected + 1;\r\n        params.perPage = currentPerPage;\r\n        var uri = '?' + queryString.stringify(params);\r\n        console.log('uri = ' + uri);\r\n        history.push(uri);\r\n        history.go(uri);\r\n    }\r\n\r\n    const handleSortFilter = (data) => {\r\n        const name = data.target.id;\r\n        const value = data.target.value;\r\n\r\n        var params: any = queryString.parse(props.location.search);\r\n        var uri = '?' + queryString.stringify(params);\r\n        uri = uri.replace(/page=\\d\\d*/, 'page=1');\r\n\r\n        // Remove current parameter\r\n        const index = uri.indexOf(name);\r\n        const tmp1 = uri.substring(0, index);\r\n        const tmp2 = uri.substring(index);\r\n        if (index >= 0) {\r\n            var andIndex = tmp2.indexOf('&');\r\n            if (andIndex != -1) {\r\n                andIndex += tmp1.length;\r\n                uri = uri.substring(0, index) + uri.substring(andIndex);\r\n            } else {\r\n                uri = uri.substring(0, index);\r\n            }\r\n        }\r\n        \r\n        if (value != '') {\r\n            uri += uri.length == 1 ? name + '=' + value : '&' + name + '=' + value;\r\n        }\r\n        history.push(uri);\r\n        history.go(uri);\r\n    }\r\n\r\n    return ( \r\n        <div className='container'>\r\n            {msg ? (<h3> {msg} </h3>) : (\r\n                data ?\r\n                <>\r\n                    <div className=\"row\">\r\n                        <h2>Country Covid Data</h2><br /><br /><br />\r\n                        <SearchBar\r\n                            defaultValue={q}\r\n                            location={props.location}\r\n                            type={\"country covid data\"}\r\n                        />\r\n                        <div className=\"option_container\">\r\n                            <div className='select_con card border-0 text-center'>\r\n                                <label>Filter by # of Cases</label>\r\n                                <select id='cases' onChange={handleSortFilter.bind(this)} defaultValue={cases + ''}>\r\n                                    <option value='' selected>---</option>\r\n                                    <option value='0-500000'>&#60; 500K</option>\r\n                                    <option value='500000-1000000'>500K - 1M</option>\r\n                                    <option value='1000000-5000000'>1M - 5M</option>\r\n                                    <option value='5000000-10000000'>5M - 10M</option>\r\n                                    <option value='10000000-25000000'>10M - 25M</option>\r\n                                    <option value='25000000-99999999'>&#62; 25M</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='select_con card border-0 text-center'>\r\n                                <label>Filter by # of Deaths</label>\r\n                                <select id='deaths' onChange={handleSortFilter.bind(this)} defaultValue={deaths + ''}>\r\n                                    <option value='' selected>---</option>\r\n                                    <option value='0-100'>&#60; 100</option>\r\n                                    <option value='100-500'>100 - 500</option>\r\n                                    <option value='500-1000'>500 - 1000</option>\r\n                                    <option value='1000-5000'>1000 - 5000</option>\r\n                                    <option value='5000-10000'>5000 - 10K</option>\r\n                                    <option value='10000-50000'>10K - 50K</option>\r\n                                    <option value='50000-100000'>50K - 100K</option>\r\n                                    <option value='100000-500000'>100K - 500K</option>\r\n                                    <option value='500000-999999'>&#62; 500K</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='select_con card border-0 text-center'>\r\n                                <label>Filter by # of Recovered</label>\r\n                                <select id='recovered' onChange={handleSortFilter.bind(this)} defaultValue={recovered + ''}>\r\n                                    <option value='' selected>---</option>\r\n                                    <option value='0-500000'>&#60; 500K</option>\r\n                                    <option value='500000-1000000'>500K - 1M</option>\r\n                                    <option value='1000000-5000000'>1M - 5M</option>\r\n                                    <option value='5000000-10000000'>5M - 10M</option>\r\n                                    <option value='10000000-25000000'>10M - 25M</option>\r\n                                    <option value='25000000-99999999'>&#62; 25M</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='select_con card border-0 text-center'>\r\n                                <label>Sort by</label>\r\n                                <select id='sort' onChange={handleSortFilter.bind(this)} defaultValue={sort + ''}>\r\n                                    <option value='' selected>---</option>\r\n                                    <option value='country'>Country Name (A-Z)</option>\r\n                                    <option value='-country'>Country Name (Z-A)</option>\r\n                                    <option value='cases'># of Cases (Asc)</option>\r\n                                    <option value='-cases'># of Cases (Desc)</option>\r\n                                    <option value='deaths'># of Deaths (Asc)</option>\r\n                                    <option value='-deaths'># of Deaths (Desc)</option>\r\n                                    <option value='recovered'># of Recoveries (Asc)</option>\r\n                                    <option value='-recovered'># of Recoveries (Desc)</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{width: '100%', overflow:'scroll', overflowX: 'auto', overflowY: \"auto\"}}><br />\r\n                            <table className=\"table\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr>\r\n                                    <th scope=\"col\">Country</th>\r\n                                    <th scope=\"col\">Number of cases</th>\r\n                                    <th scope=\"col\">Number of deaths</th>\r\n                                    <th scope=\"col\">Number of recovered</th>\r\n                                    <th scope=\"col\">Last updated</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {data.data.map( covid => (\r\n                                        <Covid\r\n                                            covid={covid}\r\n                                            key={covid.id}\r\n                                            q={q}\r\n                                        />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {\"There are \" + data.count + \" countries\"}\r\n                    </div>\r\n                    {/* Pagination css is in index.css */}\r\n                    <div className=\"row d-flex justify-content-center\">\r\n                        <ReactPaginate\r\n                            previousLabel={'<<'}\r\n                            nextLabel={'>>'}\r\n                            breakLabel={'...'}\r\n                            pageCount={data.count/12}\r\n                            forcePage={currentPageNum - 1}\r\n                            marginPagesDisplayed={1}\r\n                            pageRangeDisplayed={4}\r\n                            onPageChange={handlePageClick}\r\n                            containerClassName={'pagination'}\r\n                            activeClassName={'pagination-active'}\r\n                        />\r\n                    </div>\r\n                </> : <Loading />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default CovidCases;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n\r\n    const [collapseClass, handleCollapeClass] = useState('collapse');\r\n\r\n    const handleClick = () => {\r\n        if (collapseClass === 'collapse') {\r\n            handleCollapeClass('')\r\n        } else {\r\n            handleCollapeClass('collapse')\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-5\">\r\n            <div className='container'>\r\n                <Link to='/' className=\"navbar-brand\">CovidDB</Link>\r\n                <button onClick={handleClick} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className={collapseClass + \" navbar-collapse\"}>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link onClick={handleClick} to='/' className=\"nav-link\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link onClick={handleClick} to='/about' className=\"nav-link\">About us</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link onClick={handleClick} to='/country' className=\"nav-link\">Country</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link onClick={handleClick} to='/city' className=\"nav-link\">City</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link onClick={handleClick} to='/covid' className=\"nav-link\">Covid</Link>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link onClick={handleClick} to='/ourVis' className=\"nav-link\">Visualizations</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link onClick={handleClick} to='/ATWVis' className=\"nav-link\">Provider Visualizations</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n \r\nexport default Navbar;","import GoogleMapReact from 'google-map-react';\r\n\r\nconst SimpleMap = ( { info } ) => {\r\n\r\n    const { center, zoom } = info;\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '60vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: 'AIzaSyAWHsgLyumhKDtCpPNF7y3IwOPveT0AaWY'}}\r\n          defaultCenter={center}\r\n          defaultZoom={zoom}\r\n          onClick={onclick}\r\n        >\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SimpleMap;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport SimpleMap from '../map/SimpleMap';\r\nimport LocaleInfo from '../localeInfo/localeInfo';\r\nimport clientAxios from '../../config/axios';\r\nimport Loading from '../layout/Loading';\r\n\r\nconst CountryInstance = () => {\r\n\r\n    interface Country {\r\n        id: number;\r\n        area: number;\r\n        coatOfArms: string;\r\n        commonName: string;\r\n        officialName: string;\r\n        continent: string;\r\n        flag: string;\r\n        latitude: string;\r\n        longitude: string;\r\n        maps: string;\r\n        population: number;\r\n        region: string;\r\n        subregion: string;\r\n        timezone: TimeZone[];\r\n        currency: Currency[];\r\n        language: Language[];\r\n        city: City;\r\n    }   \r\n\r\n    interface City {\r\n        id: number;\r\n        name: string;\r\n    }\r\n\r\n    interface TimeZone {\r\n        zone: string;\r\n    }\r\n\r\n    interface Currency {\r\n        zone: string;\r\n    }\r\n\r\n    interface Language {\r\n        zone: string;\r\n    }\r\n\r\n    let { id } = useParams();\r\n\r\n    const [country, setCountry] = useState<Country>();\r\n    const [msg, setMsg] = useState('');\r\n\r\n    // Get city from api\r\n    const getCountry = async () => {\r\n        try {\r\n            const response = await clientAxios.get<Country>(`/v1/models/country/id=${id}`)\r\n                .then(response => {\r\n                    setCountry(response.data)\r\n                })\r\n                .catch(\r\n                    error => {\r\n                        if (error.response.status == 400) {\r\n                            setMsg(error.response.data);\r\n                            setCountry(undefined);\r\n                        } else {\r\n                            setMsg('404 Not Found');\r\n                            console.log(error.response.data);\r\n                            setCountry(undefined);\r\n                        }\r\n                    }\r\n                );\r\n        } catch (error) {\r\n            setMsg('There was an error');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCountry();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='container'>\r\n            {msg ? (<h3> {msg} </h3>) : \r\n                country ? (\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4 col-12\">\r\n                            <div className=\"card\">\r\n                                <h2 className=\"text-center text-uppercase font-weigh-bold mb-0\">{country.officialName}</h2>\r\n                                {country.flag ? (\r\n                                    <img className=\"card-img-top\" src={country.flag} alt={country.commonName} />\r\n                                ) : null}\r\n                                {country.coatOfArms ? (\r\n                                    <img className=\"card-img-top\" src={country.coatOfArms} alt={country.commonName} />\r\n                                ) : null}\r\n                                <div className=\"card-body\">\r\n                                    <p className=\"card-text\">\r\n                                        <table className=\"table\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                <th scope=\"row\">Area</th>\r\n                                                <td>{country.area.toLocaleString(\"en-US\")}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                <th scope=\"row\">Population</th>\r\n                                                <td>{country.population.toLocaleString(\"en-US\")}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                <th scope=\"row\">Region</th>\r\n                                                <td>{country.region}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                <th scope=\"row\">Subregion</th>\r\n                                                <td>{country.subregion}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                <th scope=\"row\">Capital</th>\r\n                                                {country.city ? (\r\n                                                   <td><Link to={\"/city/\"+ country.city.id}>{country.city.name}</Link></td>\r\n                                                ) : <td>None</td>}\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <a href={\"./covid/\" + country.id} className=\"btn btn-primary btn-lg active w-100\" role=\"button\" aria-pressed=\"true\">{country.commonName}'s Covid Data</a>\r\n                                    </p>\r\n                                </div>\r\n                            </div><br /><br />\r\n                        </div>\r\n                        <div className=\"col-lg-8 col-12\">\r\n                            <SimpleMap info={{center:{lat:parseFloat(country.latitude), lng:parseFloat(country.longitude)}, zoom:4}}/>\r\n                        </div>\r\n                        <div><br /><br />\r\n                            <LocaleInfo\r\n                                location={country.commonName}\r\n                                showNews={true}\r\n                                showTests={false}/>\r\n                        </div>\r\n                    </div>\r\n                ) : <Loading />}\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default CountryInstance;","import React, { useState, useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport SimpleMap from '../map/SimpleMap';\r\nimport LocaleInfo from '../localeInfo/localeInfo'\r\nimport clientAxios from '../../config/axios';\r\nimport Loading from '../layout/Loading';\r\nimport Cities from './cities';\r\n\r\nconst CityInstance = () => {\r\n    let { id } = useParams();\r\n\r\n    interface City {\r\n        country_id: number;\r\n        id: number;\r\n        name: string;\r\n        population: number;\r\n        latitude: number;\r\n        longitude: number;\r\n        country: Country;\r\n\r\n    }\r\n\r\n    interface Country {\r\n        officialName: string;\r\n    }\r\n\r\n    // Find city\r\n    const [city, setCity] = useState<City>();\r\n    const [msg, setMsg] = useState('');\r\n\r\n    // Get city from api\r\n    const getCity = async () => {\r\n        try {\r\n            const response = await clientAxios.get<City>(`/v1/models/city/id=${id}`)\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    setCity(response.data);\r\n                })\r\n                .catch(\r\n                    error => {\r\n                        if (error.response.status == 400) {\r\n                            setMsg(error.response.data);\r\n                            setCity(undefined);\r\n                        } else {\r\n                            setMsg('404 Not Found');\r\n                            console.log(error.response.data);\r\n                            setCity(undefined);\r\n                        }\r\n                    }\r\n                );\r\n        } catch (error) {\r\n            setMsg('There was an error');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCity();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            {msg ? (<h3> {msg} </h3>) : \r\n                city ? (\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"col-lg-4 col-12\">\r\n                            <div className=\"card\">\r\n                                <h2 className=\"text-center text-uppercase font-weigh-bold mb-0\">{city.name}</h2>\r\n                                {/* <img className=\"card-img-top\" src={''} alt={city.name}/> */}\r\n                                <div className=\"card-body\">\r\n                                    <p className=\"card-text\">\r\n                                        <table className=\"table\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                <th scope=\"row\">Latitude</th>\r\n                                                <td>{city.latitude}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                <th scope=\"row\">Longitude</th>\r\n                                                <td>{city.longitude}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                <th scope=\"row\">Population</th>\r\n                                                <td>{city.population != null ? city.population.toLocaleString(\"en-US\") : \"No data\"}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                <th scope=\"row\">Country</th>\r\n                                                <td><Link to={\"/country/\"+ city.country_id}>{city.country.officialName}</Link></td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <a href={\"./covid/\" + city.country_id} className=\"btn btn-primary btn-lg active w-100\" role=\"button\" aria-pressed=\"true\">{city.country.officialName}'s Covid Data</a>\r\n                                    </p>\r\n                                </div>\r\n                            </div><br /><br />\r\n                        </div>\r\n                        <div className=\"col-lg-8 col-12\">\r\n                            <SimpleMap info={{center:{lat:city.latitude, lng:city.longitude}, zoom:11}}/>\r\n                        </div>\r\n                        <div><br /><br />\r\n                            <LocaleInfo\r\n                                location={city.name}\r\n                                showNews={true}\r\n                                showTests={false}/>\r\n                        </div>\r\n                    </div>\r\n                ) : <Loading />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default CityInstance;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CovidDate = ({ covid }) => {\r\n    \r\n    return(\r\n        <tr>\r\n        <td>{covid.date.slice(0,10)}</td>\r\n        <td>{covid.totalCases.toLocaleString(\"en-US\")}</td>\r\n        <td>{covid.totalDeaths.toLocaleString(\"en-US\")}</td>\r\n        <td>{covid.totalRecovered.toLocaleString(\"en-US\")}</td>\r\n        </tr>\r\n    )\r\n}\r\n \r\nexport default CovidDate;","import React from 'react';\r\n\r\nconst CovidGraph = ({location}) => {\r\n    switch (location){\r\n        case \"United States\":\r\n            location = \"US\";\r\n            break;\r\n    }\r\n\r\n    \r\n\r\n    const searchLocation = encodeURI(location)\r\n    const searchQuery \r\n        = 'https://trekhleb.dev/covid-19/?selectedRegions=%5B%22'\r\n        + searchLocation\r\n        + '%22%5D&groupByCountry=true';\r\n    console.log(searchQuery);\r\n    return(\r\n        <div style={{'height': '600px', 'width': '100%'}} >\r\n            <h3>Local Trends</h3>\r\n            <iframe\r\n                src={searchQuery}\r\n                scrolling= \"no\"\r\n                height=\"85%\"\r\n                width=\"100%\"\r\n                title=\"Country COVID Graph\"\r\n                style={{'border': '1px solid black'}}\r\n                >\r\n            </iframe>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CovidGraph;\r\n","import { useParams } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CovidDate from './covidDate';\r\nimport { Chart} from \"react-google-charts\";\r\nimport Datetime from 'react-datetime';\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport { NumberArray } from 'd3';\r\nimport clientAxios from '../../config/axios';\r\nimport Loading from '../layout/Loading';\r\nimport CovidGraph from '../covidGraph/covidGraph';\r\nimport LocaleInfo from '../localeInfo/localeInfo';\r\nimport { countReset } from 'console';\r\nimport City from '../city/city';\r\n\r\nconst CountryTimeline = () => {\r\n\r\n    interface CovidInstance {\r\n        country: Country;\r\n        country_id: number;\r\n        date: string;\r\n        id: number;\r\n        totalCases: number;\r\n        city: City;\r\n    }\r\n\r\n    interface City {\r\n        name: string;\r\n        id: number;\r\n    }\r\n\r\n    interface Country {\r\n        officialName: string;\r\n        commonName: string;\r\n    }\r\n\r\n    let { country_id } = useParams();\r\n\r\n    const [covid, setCovid] = useState<CovidInstance[]>();\r\n    const [currentCovid, setCurrentCovid] = useState<CovidInstance[]>();\r\n    const [msg, setMsg] = useState('');\r\n\r\n    const getCovid = async () => {\r\n        try {\r\n            const response = await clientAxios.get<CovidInstance[]>(`/v1/models/covidInstance/country_id=${country_id}`)\r\n                .then(response => {\r\n                    setCovid(response.data)\r\n                    setCurrentCovid(response.data.slice(0, 10))\r\n                })\r\n                .catch(\r\n                    error => {\r\n                        if (error.response.status == 400) {\r\n                            setMsg(error.response.data);\r\n                            setCurrentCovid(undefined);\r\n                        } else {\r\n                            setMsg('404 Not Found');\r\n                            console.log(error.response.data);\r\n                            setCurrentCovid(undefined);\r\n                        }\r\n                    }\r\n                );\r\n        } catch (error) {\r\n            setMsg('There was an error');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCovid();\r\n    }, []);\r\n\r\n    //add connection to city and country\r\n    // try catch for countries that are not found\r\n    \r\n    const handlePageClick = (data) => {\r\n        if (covid) {\r\n            setCurrentCovid(covid.slice(data.selected*10, data.selected*10+10))\r\n        }\r\n    }\r\n\r\n    return (\r\n        //initial check to see if data exists\r\n        covid && !covid[0]\r\n            ? <h2>Unfortunately there is no COVID data available for this country :(</h2> :\r\n\r\n        <div className='container'>\r\n            {msg ? (<h3>{msg}</h3>) : (\r\n                (covid && currentCovid) ? \r\n                <>\r\n                    <div className=\"row\">\r\n                            <div className='col-12 col-md-4 mb-2'> \r\n                                <h2>{covid[0].country.officialName} Covid Timeline</h2>\r\n                            </div>\r\n                            <div className='col-12 col-md-4 mb-2'> \r\n                                <a href={\"./country/\" + country_id} className=\"btn btn-primary btn-lg active w-100\" role=\"button\" aria-pressed=\"true\">{covid[0].country.officialName}'s General Info</a>\r\n                            </div>\r\n                        {covid[0].country && covid[0].city? (\r\n                            <div className='col-12 col-md-4 mb-2'> \r\n                                <a href={\"./city/\" + covid[0].city.id} className=\"btn btn-primary btn-lg active w-100\" role=\"button\" aria-pressed=\"true\">{covid[0].city.name}'s General Info</a>\r\n                            </div>\r\n                        ) : <div className='col-12 col-md-4 mb-2'> <a href={\"\"} className=\"btn btn-primary btn-lg disabled w-100\" role=\"button\" aria-pressed=\"true\">{covid[0].country.officialName} has no capital</a> </div>}\r\n                        <table className=\"table\">\r\n                            <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                <th scope=\"col\">Date</th>\r\n                                <th scope=\"col\">Cases daily</th>\r\n                                <th scope=\"col\">Deaths daily</th>\r\n                                <th scope=\"col\">Recovered Daily</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {currentCovid.map( covidDate => (    \r\n                                    <CovidDate\r\n                                    key={covidDate.id}\r\n                                    covid={covidDate} \r\n                                    />\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {\"There are \" + covid.length + \" dates\"}\r\n                    </div>\r\n                    {/* Pagination css is in index.css */}\r\n                    <div className=\"row d-flex justify-content-center\">\r\n                        <ReactPaginate\r\n                            previousLabel={'<<'}\r\n                            nextLabel={'>>'}\r\n                            breakLabel={'...'}\r\n                            pageCount={covid.length/10}\r\n                            marginPagesDisplayed={1}\r\n                            pageRangeDisplayed={4}\r\n                            onPageChange={handlePageClick}\r\n                            containerClassName={'pagination'}\r\n                            activeClassName={'pagination-active'}\r\n                        />\r\n                    </div>\r\n                    <div><br />\r\n                        <CovidGraph location = {covid[0].country.commonName}/>\r\n                    </div>\r\n                    <div><br />\r\n                            <LocaleInfo\r\n                                location={covid[0].country.officialName}\r\n                                showNews={true}\r\n                                showTests={false}/>\r\n                        </div>\r\n                </>: <Loading />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n \r\nexport default CountryTimeline;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport clientAxios from '../../config/axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChild, faMountain } from '@fortawesome/free-solid-svg-icons';\r\nimport Loading from '../layout/Loading';\r\nimport Country from '../country/country';\r\nimport City from '../city/city';\r\nimport Covid from '../covid/covid';\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchableText from \"./SearchableText\";\r\n\r\ninterface City {\r\n    country: Country;\r\n    country_id: number;\r\n    id: number;\r\n    name: string;\r\n    population: number;\r\n    latitude: number;\r\n    longitude: number;\r\n}\r\n\r\ninterface CityResponse {\r\n    count: number;\r\n    data: City[];\r\n}\r\n\r\ninterface Country {\r\n    id: number;\r\n    area: number;\r\n    officialName: string;\r\n    population: number;\r\n    continent: string;\r\n    flag: string;\r\n    capital: City;\r\n}\r\n\r\ninterface CountryResponse {\r\n    count: number;\r\n    data: Country[];\r\n}\r\n\r\ninterface CovidCases {\r\n    country: Country;\r\n    id: number;\r\n    cases: number;\r\n    deaths: number;\r\n    recovered: number;\r\n    country_id: number;\r\n    lastCovidCase: string;\r\n}\r\n\r\ninterface CovidCasesResponse {\r\n    count: number;\r\n    data: CovidCases[];\r\n}\r\n\r\ninterface AllResponse {\r\n    City: CityResponse;\r\n    Country: CountryResponse;\r\n    Covid: CovidCasesResponse;\r\n}\r\n\r\nconst MAX_CARD_DISPLAY = 7;\r\n\r\nexport default function GlobalSearch(props: any) {\r\n\r\n    const [msg, setMsg] = useState('');\r\n    const [data, setData] = useState<AllResponse>();\r\n\r\n    const { q, page, perPage } = queryString.parse(props.location.search);\r\n\r\n    var currentPageNum = Number(page ? page : 1);\r\n    var currentPerPage = Number(perPage ? perPage : 12);\r\n\r\n    const getAll = async () => {\r\n        try {\r\n            var uri = '/v1/models/all' + props.location.search;\r\n            const response = await clientAxios.get<AllResponse>(uri)\r\n                .then(response => {\r\n                    setData(response.data);\r\n                });\r\n        } catch (error) {\r\n            setMsg('There was an error');\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAll();\r\n    }, []);\r\n\r\n    return ( \r\n        <div className='container'>\r\n            {msg ? (<h3> {msg} </h3>) : (\r\n                data ?\r\n                <>\r\n                    <div className=\"row\">\r\n                        <h2>CovidDB</h2>\r\n                        <SearchBar\r\n                            defaultValue={q}\r\n                            location={props.location}\r\n                            type={\"CovidDB\"}\r\n                        />\r\n                    </div><br />\r\n\r\n                    <h3>Countries</h3>\r\n                    <CountrySearchResults\r\n                        data={data}\r\n                        moreRedirect={\"/country\" + props.location.search}\r\n                        q={q}\r\n                    />\r\n\r\n                    <br />\r\n                    <h3>Cities</h3>\r\n                    <CitySearchResults\r\n                        data={data}\r\n                        moreRedirect={\"/city\" + props.location.search}\r\n                        q={q}\r\n                    />\r\n\r\n                    <br />\r\n                    <h3>Covid</h3>\r\n                    <CovidSearchResults\r\n                        data={data}\r\n                        moreRedirect={\"/covid\" + props.location.search}\r\n                        q={q}\r\n                    />\r\n                </> : <Loading />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CountrySearchResults(props: any) {\r\n    var data: any = props.data;\r\n    var q: string = props.q;\r\n    var moreRedirect: string = props.moreRedirect;\r\n\r\n    if (data.Country.data.length == 0) {\r\n        return <>No search results</>\r\n    }\r\n    \r\n    return (\r\n        <div className=\"row-grid\">\r\n        {   \r\n            data.Country.data.length < 6\r\n            ?   data.Country.data.map( country =>\r\n                    <CountryCard\r\n                        country={country}\r\n                        q={q}\r\n                    />\r\n                )\r\n            :   <>\r\n                {\r\n                    data.Country.data.slice(0, MAX_CARD_DISPLAY).map( country =>\r\n                        <CountryCard\r\n                            country={country}\r\n                            q={q}\r\n                        />\r\n                    )\r\n                }\r\n                {\r\n                    <CountryCard\r\n                        redirect={moreRedirect}\r\n                        redirectPrompt={\r\n                            // \"Click here to search $ more countries\"\r\n                            `Click here to search ${data.Country.count - MAX_CARD_DISPLAY} more countries`\r\n                        }\r\n                    />\r\n                }\r\n                </>\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CitySearchResults(props: any) {\r\n    var data: any = props.data;\r\n    var q: string = props.q;\r\n    var moreRedirect: string = props.moreRedirect;\r\n\r\n    if (data.City.data.length == 0) {\r\n        return <>No search results</>\r\n    }\r\n\r\n    return (\r\n        <div className=\"row-grid\">\r\n        {\r\n            data.City.data.length < 6\r\n            ?   data.City.data.map( city =>\r\n                <CityCard\r\n                    city={city}\r\n                    q={q}\r\n                />\r\n            )\r\n            :   <>\r\n                {\r\n                    data.City.data.slice(0, MAX_CARD_DISPLAY).map( city =>\r\n                        <CityCard\r\n                            city={city}\r\n                            q={q}\r\n                        />\r\n                    )\r\n                }\r\n                {\r\n                    <CityCard\r\n                        redirect={moreRedirect}\r\n                        redirectPrompt={\r\n                            // \"Click here to search $ more cities\"\r\n                            `Click here to search ${data.City.count - MAX_CARD_DISPLAY} more cities`\r\n                        }\r\n                    />\r\n                }\r\n                </>\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CovidSearchResults(props: any) {\r\n    var data: any = props.data;\r\n    var q: string = props.q;\r\n    var moreRedirect: string = props.moreRedirect;\r\n\r\n    if (data.Covid.data.length == 0) {\r\n        return <>No search results</>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"row-grid\">\r\n        {\r\n            data.Covid.data.length < 6\r\n            ? data.Covid.data.map( covid =>\r\n                <CovidCard\r\n                    covid={covid}\r\n                    q={q}\r\n                />\r\n            )\r\n            :   <>\r\n                {\r\n                    data.Covid.data.slice(0, MAX_CARD_DISPLAY).map( covid =>\r\n                        <CovidCard\r\n                            covid={covid}\r\n                            q={q}\r\n                        />\r\n                    )\r\n                }\r\n                <CovidCard\r\n                    redirect={moreRedirect}\r\n                    redirectPrompt={\r\n                        // \"Click here to search $ more country's covid data\"\r\n                        `Click here to search ${data.Covid.count - MAX_CARD_DISPLAY} more country's covid data`\r\n                    }\r\n                />\r\n                </>\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CountryCard(props: any) {\r\n    var country: Country = props.country;\r\n    var q: string = props.q;\r\n    var redirect: string = props.redirect;\r\n    var redirectPrompt: string = props.redirectPrompt;\r\n\r\n    const history = useHistory();\r\n\r\n    if (redirect != null) {\r\n        const handleCardClick = () => {\r\n            history.push(redirect);\r\n        }\r\n\r\n        return (\r\n            <div className='card modelrow' onClick={handleCardClick} style={{alignItems: \"center\", width: \"250px\", height: \"auto\"}}>\r\n                <div className='card-body' style={{display: \"flex\", alignItems: \"center\"}}>\r\n                    <h5 className='card-title text-center mt-6' style={{fontSize: \"17px\"}}>\r\n                        {redirectPrompt}\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Country \r\n            country={country}\r\n            key={country.id}\r\n            q={q}\r\n        />\r\n    );\r\n}\r\n\r\nfunction CityCard(props: any) {\r\n    var city: City = props.city;\r\n    var q: string = props.q;\r\n    var redirect: string = props.redirect;\r\n    var redirectPrompt: string = props.redirectPrompt;\r\n\r\n    const history = useHistory();\r\n\r\n    if (redirect != null) {\r\n        const handleCardClick = () => {\r\n            history.push(redirect);\r\n        }\r\n\r\n        return (\r\n            <div className='card modelrow' onClick={handleCardClick} style={{alignItems: \"center\", width: \"250px\", height: \"auto\"}}>\r\n                <div className='card-body' style={{display: \"flex\", alignItems: \"center\"}}>\r\n                    <h5 className='card-title text-center mt-6' style={{fontSize: \"17px\"}}>\r\n                        {redirectPrompt}\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const handleCardClick = () => {\r\n        history.push(\"/city/\" + city.country_id);\r\n    }\r\n\r\n    return (\r\n        <div className='card modelrow' onClick={handleCardClick} style={{alignItems: \"center\", width: \"250px\", height: \"auto\"}}>\r\n            <br />\r\n            <h5 className='card-title text-center mt-6' style={{fontSize: \"17px\"}}>\r\n                <SearchableText q={q}>\r\n                    {city.name}\r\n                </SearchableText>\r\n            </h5>\r\n            <div className='card-body'>\r\n                <div className='row' style={{width: \"250px\"}}>\r\n                    <div className='col-12 d-flex justify-content-around'>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            Latitude: \r\n                        </p>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            {city.latitude}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='row' style={{width: \"250px\"}}>\r\n                    <div className='col-12 d-flex justify-content-around'>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            Longitude: \r\n                        </p>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            {city.longitude}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='row' style={{width: \"250px\"}}>\r\n                    <div className='col-12 d-flex justify-content-around'>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            Population\r\n                        </p>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            {city.population}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='row' style={{width: \"250px\"}}>\r\n                    <div className='col-12 d-flex justify-content-around'>\r\n                        <p style={{fontSize: \"14px\"}}>Country: </p>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            <SearchableText q={q}>\r\n                                {city.country.officialName}\r\n                            </SearchableText>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CovidCard(props: any) {\r\n    var covid: CovidCases = props.covid;\r\n    var q: string = props.q;\r\n    var redirect: string = props.redirect;\r\n    var redirectPrompt: string = props.redirectPrompt;\r\n\r\n    const history = useHistory();\r\n\r\n    if (redirect != null) {\r\n        const handleCardClick = () => {\r\n            history.push(redirect);\r\n        }\r\n\r\n        return (\r\n            <div className='card modelrow' onClick={handleCardClick} style={{alignItems: \"center\", width: \"250px\", height: \"auto\"}}>\r\n                <div className='card-body' style={{display: \"flex\", alignItems: \"center\"}}>\r\n                    <h5 className='card-title text-center mt-6' style={{fontSize: \"17px\"}}>\r\n                        {redirectPrompt}\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const handleCardClick = () => {\r\n        history.push(\"/covid/\" + covid.country_id);\r\n    }\r\n\r\n    return (\r\n        <div className='card modelrow' onClick={handleCardClick} style={{alignItems: \"center\", width: \"250px\", height: \"auto\"}}>\r\n            <br />\r\n            <h5 className='card-title text-center mt-6' style={{fontSize: \"17px\"}}>\r\n                <SearchableText q={q}>\r\n                    {covid.country.officialName}\r\n                </SearchableText>\r\n            </h5>\r\n            <div className='card-body'>\r\n                <div className='row' style={{width: \"250px\"}}>\r\n                    <div className='col-12 d-flex justify-content-around'>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            Number of cases: \r\n                        </p>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            {covid.cases.toLocaleString(\"en-US\")}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='row' style={{width: \"250px\"}}>\r\n                    <div className='col-12 d-flex justify-content-around'>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            Number of deaths: \r\n                        </p>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            {covid.deaths.toLocaleString(\"en-US\")}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='row' style={{width: \"250px\"}}>\r\n                    <div className='col-12 d-flex justify-content-around'>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            Number of recovered: \r\n                        </p>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            {covid.recovered.toLocaleString(\"en-US\")}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='row' style={{width: \"250px\"}}>\r\n                    <div className='col-12 d-flex justify-content-around'>\r\n                        <p style={{fontSize: \"14px\"}}>Last updated: </p>\r\n                        <p style={{fontSize: \"14px\"}}>\r\n                            {covid.lastCovidCase.slice(0,10)}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clientAxios from '../../config/axios';\r\nimport Loading from '../layout/Loading';\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    Brush,\r\n    ReferenceLine,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend,\r\n    ResponsiveContainer,\r\n  } from 'recharts';\r\n\r\nconst GroupedBarChart = ({props}) => {\r\n    interface CovidCases {\r\n        country: Country;\r\n        id: number;\r\n        cases: number;\r\n        deaths: string;\r\n        recovered: number;\r\n        country_id: number;\r\n        lastCovidCase: string;\r\n    }\r\n\r\n    interface CovidCasesResponse {\r\n        count: number;\r\n        data: CovidCases[];\r\n    }\r\n\r\n    interface Country {\r\n        commonName: string;\r\n        officialName: string;\r\n    }\r\n\r\n    const [msg, setMsg] = useState('');\r\n    const [data, setData] = useState<CovidCases[]>();\r\n\r\n    const getCovidCases = async () => {\r\n        try {\r\n            var uri = 'https://api.crown19db.me/v1/models/covid?sort=-cases&perPage=50'\r\n            const response = await clientAxios.get<CovidCasesResponse>(uri)\r\n                .then(response => {\r\n                    setData(response.data.data);\r\n                });\r\n        } catch (error) {\r\n            setMsg('There was an error');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setData(undefined);\r\n        getCovidCases();\r\n    }, [props]);\r\n\r\n    return (\r\n        <div className= \"container\">\r\n            {msg ? (<h3> {msg} </h3>) : (\r\n                data ?\r\n                <>\r\n                <ResponsiveContainer width=\"100%\" height={500}>\r\n                    <BarChart\r\n                        width={700}\r\n                        height={500}\r\n                        data={data}\r\n                        margin={{\r\n                            top: 5,\r\n                            right: 30,\r\n                            left: 30,\r\n                            bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"country.commonName\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\r\n                        <ReferenceLine y={0} stroke=\"#000\" />\r\n                        <Brush dataKey=\"name\" height={30} stroke=\"#000\" />\r\n                        <Bar dataKey=\"cases\" fill=\"#BF1A0E\" />\r\n                        <Bar dataKey=\"deaths\" fill=\"#000000\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n                </> : <Loading />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupedBarChart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clientAxios from '../../config/axios';\r\nimport Loading from '../layout/Loading';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst DatesLineChart = ({props}) => {\r\n    interface CovidInstance {\r\n        country: Country;\r\n        country_id: number;\r\n        date: string;\r\n        id: number;\r\n        totalCases: number;\r\n        city: City;\r\n    }\r\n\r\n    interface City {\r\n        name: string;\r\n        id: number;\r\n    }\r\n\r\n    interface Country {\r\n        officialName: string;\r\n        commonName: string;\r\n    }\r\n\r\n    interface graphDate {\r\n        date: string;\r\n        US: number;\r\n        India: number;\r\n        Brazil: number;\r\n        UK: number;\r\n        Russia: number;\r\n    }\r\n\r\n    let allData: any[] = []\r\n\r\n    const [data, setAllData] = useState<graphDate[]>();\r\n    const [msg, setMsg] = useState('');\r\n\r\n    var output: any;\r\n\r\n    const getCovid = async (country_id: number) => {\r\n        try {\r\n            const response = await clientAxios.get<CovidInstance[]>(`https://api.crown19db.me/v1/models/covidInstance/country_id=${country_id}`)\r\n                .then(response => {\r\n                    output = response.data;\r\n                })\r\n                .catch(\r\n                    error => {\r\n                        if (error.response.status == 400) {\r\n                            setMsg(error.response.data);\r\n                        } else {\r\n                            setMsg('404 Not Found');\r\n                            console.log(error.response.data);\r\n                        }\r\n                    }\r\n                );\r\n        } catch (error) {\r\n            setMsg('There was an error');\r\n        }\r\n\r\n        return new Promise(resolve => {resolve(output)});\r\n    }\r\n\r\n    async function getAllData() {\r\n        const [firstCall, secondCall, thirdCall, fourthCall, fifthCall] = await Promise.all([\r\n\t\t    getCovid(109),\r\n            getCovid(71),\r\n            getCovid(187),\r\n            getCovid(66),\r\n            getCovid(118)\r\n\t    ])\r\n\r\n        allData.push(firstCall)\r\n        allData.push(secondCall)\r\n        allData.push(thirdCall)\r\n        allData.push(fourthCall)\r\n        allData.push(fifthCall)\r\n        let tempData: graphDate[] = []\r\n        for (let i = 0; i < 616; i++) {\r\n            let instance = {date: (allData[0][i].date).slice(0,10),\r\n                            US: allData[0][i].totalCases,\r\n                            India: allData[1][i].totalCases,\r\n                            Brazil: allData[2][i].totalCases,\r\n                            UK: allData[3][i].totalCases,\r\n                            Russia: allData[4][i].totalCases}\r\n            tempData.unshift(instance)\r\n        }\r\n        setAllData(tempData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllData()\r\n    }, []);\r\n\r\n    return (\r\n        <div className= \"container\">\r\n            {msg ? (<h3> {msg} </h3>) : (\r\n                data ?\r\n                <>\r\n                <ResponsiveContainer width=\"100%\" height={500}>\r\n                    <LineChart\r\n                        width={700}\r\n                        height={500}\r\n                        data={data}\r\n                        margin={{\r\n                            top: 5,\r\n                            right: 30,\r\n                            left: 30,\r\n                            bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"US\" stroke=\"#2271B3\" activeDot={{ r: 1 }} />\r\n                        <Line type=\"monotone\" dataKey=\"India\" stroke=\"#C2B078\" />\r\n                        <Line type=\"monotone\" dataKey=\"Brazil\" stroke=\"#008F39\" />\r\n                        <Line type=\"monotone\" dataKey=\"UK\" stroke=\"#5E2129\" />\r\n                        <Line type=\"monotone\" dataKey=\"Russia\" stroke=\"#434B4D\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n                </> : <Loading />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DatesLineChart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clientAxios from '../../config/axios';\r\nimport Loading from '../layout/Loading';\r\nimport { PieChart, Pie, Sector, Cell, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\n\r\nconst PiesChart = ({props}) => {\r\n    interface CovidCases {\r\n        country: Country;\r\n        id: number;\r\n        cases: number;\r\n        deaths: string;\r\n        recovered: number;\r\n        country_id: number;\r\n        lastCovidCase: string;\r\n    }\r\n\r\n    interface CovidCasesResponse {\r\n        count: number;\r\n        data: CovidCases[];\r\n    }\r\n\r\n    interface Country {\r\n        commonName: string;\r\n        officialName: string;\r\n    }\r\n\r\n    interface PieChartData{\r\n        name: string;\r\n        value: string;\r\n    }\r\n\r\n    let allData: any[] = []\r\n\r\n    const [msg, setMsg] = useState('');\r\n    const [data, setAllData] = useState<PieChartData[]>();\r\n\r\n    var output: any;\r\n\r\n    const getCovidCases = async () => {\r\n        try {\r\n            var uri = 'https://api.crown19db.me/v1/models/covid?sort=-cases&perPage=100'\r\n            const response = await clientAxios.get<CovidCasesResponse>(uri)\r\n                .then(response => {\r\n                    output = response.data.data;\r\n                });\r\n        } catch (error) {\r\n            setMsg('There was an error');\r\n        }\r\n        return new Promise(resolve => {resolve(output)});\r\n    }\r\n\r\n    async function getAllData() {\r\n        const [firstCall] = await Promise.all([\r\n\t\t    getCovidCases(),\r\n\t    ])\r\n\r\n        allData.push(firstCall)\r\n\r\n        // console.log(allData)    \r\n\r\n\r\n        let tempData: PieChartData[] = []\r\n        for (var c of allData[0]) {\r\n            // console.log(c[0])    \r\n            let instance = {name: c.country.commonName,\r\n                            value: c.deaths\r\n                            }\r\n            tempData.push(instance)\r\n        }\r\n        console.log(tempData)\r\n        setAllData(tempData)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getAllData()\r\n    }, [props]);\r\n\r\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\n    const RADIAN = Math.PI / 180;\r\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className= \"container\">\r\n            {msg ? (<h3> {msg} </h3>) : (\r\n                data ?\r\n                <>\r\n                <ResponsiveContainer width=\"100%\" height={500}>\r\n                    <PieChart width={400} height={400}>\r\n                        <Pie\r\n                            data={data}\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            labelLine={false}\r\n                            label={renderCustomizedLabel}\r\n                            outerRadius={250}\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"value\"\r\n                        >\r\n                        {data.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                        ))}\r\n                        </Pie>\r\n                        <Tooltip cursor={{ strokeDasharray: '3 3' }}/>\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n                </> : <Loading />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PiesChart;\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport GroupedBarChart from './groupedBarChart';\r\nimport DatesLineChart from './datesLineChart';\r\nimport PiesChart from './pieChart';\r\n// import {GroupedBarChart} from \"@d3/grouped-bar-chart\"\r\n\r\nconst ourVisualizations = (props: any) => {\r\n    return ( \r\n        <div style={{justifyContent:'center', alignItems:'center'}} className=\"container\">\r\n            <h1>Covid DB Visualizations</h1>\r\n            <div style={{display: \"flex\", justifyContent:'center', alignItems:'center'}} className=\"container\">\r\n                <h3> Cases vs. Deaths </h3>\r\n            </div>\r\n            {<GroupedBarChart props/>}\r\n            <div className= \"mt-5\"></div>\r\n            <div style={{display: \"flex\", justifyContent:'center', alignItems:'center'}} className=\"container\">\r\n                <h3> Top 5 Countries Total Cases Timeline </h3>\r\n            </div>\r\n            <DatesLineChart props/>\r\n            <div className= \"mt-5\"></div>\r\n            <div style={{display: \"flex\", justifyContent:'center', alignItems:'center'}} className=\"container\">\r\n                <h3> Top 100 Countries Deaths Pie Chart </h3>\r\n            </div>\r\n            <PiesChart props/>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default ourVisualizations;\r\n","import { useState, useEffect } from 'react';\r\nimport React, { PureComponent } from 'react';\r\nimport Loading from \"../layout/Loading\";\r\nimport {FunnelChart, Funnel, Tooltip, LabelList} from 'recharts';\r\nimport clientAxios from '../../config/axios';\r\n\r\nconst FunnelIncomeChart = (props: any) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            var data: any;\r\n            var unparsedData: any;\r\n            var uri: any;\r\n            data = [];\r\n            uri = 'https://api.around-the-world.me/foodandtourism?per_page=200';\r\n            await clientAxios.get(uri)\r\n                .then((response: any) => {\r\n                    unparsedData = response.data;\r\n                })\r\n                .catch(\r\n                    error => {\r\n                        if (error.response.status == 400) {\r\n                            // setMsg(error.response.data);\r\n                            // setData(undefined);\r\n                        } else {\r\n                            // setMsg('404 Not Found');\r\n                            console.log(error.response.data);\r\n                            // setData(undefined);\r\n                        }\r\n                    }\r\n                );\r\n            var highIncome = 0;\r\n            var upperMiddleIncome = 0;\r\n            var lowerMiddleIncome = 0;\r\n            var lowIncome = 0;\r\n            \r\n            for (var i in unparsedData.result) {\r\n                var tourismData = unparsedData.result[i];\r\n                var incomeLevel = tourismData.country_income_level;\r\n                if (incomeLevel == \"High income\") {\r\n                    ++highIncome;\r\n                } else if (incomeLevel == \"Upper middle income\") {\r\n                    ++upperMiddleIncome;\r\n                } else if (incomeLevel == \"Lower middle income\") {\r\n                    ++lowerMiddleIncome;\r\n                } else {\r\n                    ++lowIncome;\r\n                }\r\n            }\r\n            data.push({\r\n                    \"name\": \"High Income\",\r\n                    \"value\": highIncome,\r\n                    \"fill\": \"#fffb08\"\r\n                });\r\n            data.push({\r\n                    \"name\": \"Upper Middle Income\",\r\n                    \"value\": upperMiddleIncome,\r\n                    \"fill\": \"#edb137\"\r\n                });\r\n            data.push({\r\n                    \"name\": \"Lower Middle Income\",\r\n                    \"value\": lowerMiddleIncome,\r\n                    \"fill\": \"#ed8137\"\r\n                });\r\n            data.push({\r\n                    \"name\": \"Low Income\",\r\n                    \"value\": lowIncome,\r\n                    \"fill\": \"#bf4f51\"\r\n                });\r\n            \r\n\r\n            console.log(data);\r\n\r\n            setData(data);\r\n            setLoading(false);\r\n        }\r\n        fetch();\r\n    }, []);\r\n    const chart = <FunnelChart width={800} height={500}>\r\n                    <Tooltip />\r\n                        <Funnel\r\n                            dataKey=\"value\"\r\n                            data={data}\r\n                            isAnimationActive\r\n                            >\r\n                        <LabelList position=\"right\" fill=\"#000\" stroke=\"none\" dataKey=\"name\" />\r\n                    </Funnel>\r\n                </FunnelChart>\r\n    return (\r\n        <>\r\n            { loading ? <Loading /> : chart }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FunnelIncomeChart;","import { useState, useEffect } from 'react';\r\nimport Loading from \"../layout/Loading\";\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    Brush,\r\n    Legend,\r\n    ReferenceLine,\r\n    ScatterChart,\r\n    Scatter,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    LabelList,\r\n    ResponsiveContainer,\r\n    Radar,\r\n    RadarChart,\r\n    PolarGrid,\r\n    PolarAngleAxis,\r\n    PolarRadiusAxis, } from 'recharts';\r\nimport clientAxios from '../../config/axios';\r\nimport FunnelIncomeChart from './funnelChart';\r\n\r\nexport default function TheirVisualizations(props: any) {\r\n    return ( \r\n        <div style={{justifyContent:'center', alignItems:'center'}} className= \"container\">\r\n            <div style={{display: \"flex\", justifyContent:'center', alignItems:'center'}} className=\"container\">\r\n                <h3> Percent of tourism in total GDP </h3>\r\n            </div>\r\n            {<WaterGdpScatterPlot /> }\r\n            <div className= \"mt-5\"></div>\r\n            <div style={{display: \"flex\", justifyContent:'center', alignItems:'center'}} className=\"container\">\r\n                <h3> Number of countries exporting different products: </h3>\r\n            </div>\r\n            { <ExportRadarChart /> }\r\n            <div className= \"mt-5\"></div>\r\n            <div style={{display: \"flex\", justifyContent:'center', alignItems:'center'}} className=\"container\">\r\n                <h3>  Amount of Countries per Income Level </h3>\r\n            </div>\r\n            <div style={{display: \"flex\", justifyContent:'center', alignItems:'center'}} className=\"container\">\r\n                { < FunnelIncomeChart /> }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst WaterGdpScatterPlot = (props: any) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            var data: any;\r\n            var tourismData: any;\r\n            var uri = 'https://api.around-the-world.me/foodandtourism?per_page=200';\r\n            await clientAxios.get(uri)\r\n                .then((response: any) => {\r\n                    tourismData = response.data;\r\n                })\r\n                .catch(\r\n                    error => {\r\n                        if (error.response.status == 400) {\r\n                            // setMsg(error.response.data);\r\n                            // setData(undefined);\r\n                        } else {\r\n                            // setMsg('404 Not Found');\r\n                            console.log(error.response.data);\r\n                            // setData(undefined);\r\n                        }\r\n                    }\r\n                );\r\n\r\n            data = [];\r\n            for (var i in tourismData.result) {\r\n                var countryTourismData = tourismData.result[i];\r\n                data.push({\r\n                    name: countryTourismData.country_name,\r\n                    percentTourismGdp: countryTourismData.country_tourism_percent_GDP\r\n                });\r\n            }\r\n\r\n            // Sort countries from most to least percent tourism gdp\r\n            data.sort((a, b) => b.percentTourismGdp - a.percentTourismGdp);\r\n\r\n            setData(data);\r\n            setLoading(false);\r\n        }\r\n        fetch();\r\n    }, []);\r\n\r\n    const tooltipFormatter = (value) => {\r\n        return [value + '%', 'Percent GDP from tourism'];\r\n    }\r\n\r\n    const tourismGdpPercentage = <ResponsiveContainer width=\"100%\" height={500}>\r\n        <BarChart\r\n            width={700}\r\n            height={500}\r\n            data={data}\r\n            margin={{\r\n                top: 5,\r\n                right: 30,\r\n                left: 30,\r\n                bottom: 5,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis unit=\"%\"/>\r\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} formatter={tooltipFormatter}/>\r\n            <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} formatter={(value) => 'Percent GDP from tourism' }/>)\r\n            <ReferenceLine y={0} stroke=\"#000\" />\r\n            <Brush dataKey=\"name\" height={30} stroke=\"#000\" />\r\n            <Bar dataKey=\"percentTourismGdp\" fill=\"#BF1A0E\" />\r\n        </BarChart>\r\n    </ResponsiveContainer>;\r\n\r\n    return(\r\n        <>\r\n            { loading ? <Loading /> : tourismGdpPercentage }\r\n        </>\r\n    );\r\n}\r\n\r\nconst ExportRadarChart = (props: any) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            var uri = 'https://api.around-the-world.me/foodandtourism?per_page=200';\r\n            await clientAxios.get(uri)\r\n                .then((response: any) => {\r\n                    var exportData: any = {};\r\n                    for (var i in response.data.result) {\r\n                        var countryExportData  = response.data.result[i];\r\n                        var agriExport = countryExportData.country_agricultural_exports;\r\n\r\n                        if (agriExport.indexOf(',') == -1) {\r\n                            if (!(agriExport in exportData)) {\r\n                                exportData[agriExport] = 1;\r\n                            } else {\r\n                                exportData[agriExport]++;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    var data: any = [];\r\n                    for (var i in exportData) {\r\n                        var numExports = exportData[i];\r\n                        if (numExports > 1) {\r\n                            data.push({\r\n                                name: i,\r\n                                numExports: numExports\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    setData(data);\r\n                    setLoading(false);\r\n                })\r\n                .catch(\r\n                    error => {\r\n                        if (error.response.status == 400) {\r\n                            // setMsg(error.response.data);\r\n                            // setData(undefined);\r\n                        } else {\r\n                            // setMsg('404 Not Found');\r\n                            console.log(error.response.data);\r\n                            // setData(undefined);\r\n                        }\r\n                    }\r\n                );\r\n        }\r\n        fetch();\r\n    }, []);\r\n\r\n    const exportRadarChart = \r\n        <ResponsiveContainer width=\"100%\" height={500}>\r\n            <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={data}>\r\n                <PolarGrid />\r\n                <PolarAngleAxis dataKey=\"name\" />\r\n                <PolarRadiusAxis />\r\n                <Radar name=\"Number of countries\" dataKey=\"numExports\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\r\n                <Tooltip cursor={{ strokeDasharray: '3 3' }}/>\r\n            </RadarChart>\r\n        </ResponsiveContainer>;\r\n\r\n    return (\r\n        <>\r\n            { loading ? <Loading /> : exportRadarChart }\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport About from \"./components/about/About\"\r\nimport Splash from './components/splash/splash';\r\nimport Countries from './components/country/countries';\r\nimport City from './components/city/cities';\r\nimport CovidCases from './components/covid/covidcases';\r\nimport Navbar from './components/layout/navbar';\r\nimport CountryInstance from './components/country/countryInstance';\r\nimport CityInstance from './components/city/cityInstance';\r\nimport CovidInstance from './components/covid/covidInstance';\r\nimport CountryTimeline from './components/covid/countryTimeline';\r\nimport GlobalSearch from './components/search/GlobalSearch';\r\nimport ourVisualizations from './components/visualizations/ourVisualizations';\r\nimport TheirVisualizations from './components/visualizations/theirVisualizations';\r\nrequire('dotenv').config();\r\n\r\nfunction Index() {\r\n  return (\r\n    <div>\r\n      <h2>Home</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  // May have to run \"sudo apt install node-typescript\" \r\n  // and \"npm link typescript\"\r\n  // https://blog.logrocket.com/using-typescript-with-react-tutorial-examples/\r\n\r\n  return (\r\n    <Router basename='/'>\r\n      <Switch>\r\n        <div>\r\n          <Navbar />\r\n            <Route exact path=\"/\" component={Splash} />\r\n            <Route exact path=\"/about\" component={About} />\r\n            <Route exact path=\"/country\" component={Countries} />\r\n            <Route exact path=\"/city\" component={City} />\r\n            <Route exact path=\"/covid\" component={CovidCases} />\r\n            <Route exact path=\"/country/:id\" children={<CountryInstance />} />\r\n            <Route exact path=\"/city/:id\" children={<CityInstance />} />\r\n            <Route exact path=\"/covid/:country_id\" children={<CountryTimeline />} />\r\n            <Route exact path=\"/search\" component={GlobalSearch} />\r\n            <Route exact path=\"/ourVis\" component={ourVisualizations} />\r\n            <Route exact path=\"/ATWVis\" component={TheirVisualizations} />\r\n        </div>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}